{"version":3,"sources":["webpack://ENABLE3D/webpack/universalModuleDefinition","webpack://ENABLE3D/webpack/bootstrap","webpack://ENABLE3D/external \"THREE\"","webpack://ENABLE3D/../common/dist/logger.js","webpack://ENABLE3D/../common/dist/extendedMesh.js","webpack://ENABLE3D/./node_modules/eventemitter3/index.js","webpack://ENABLE3D/../common/dist/extendedObject3D.js","webpack://ENABLE3D/../common/dist/defaultMaterial.js","webpack://ENABLE3D/../common/dist/applyMixins.js","webpack://ENABLE3D/../common/dist/extendedGroup.js","webpack://ENABLE3D/../common/dist/physicsLoader.js","webpack://ENABLE3D/../common/dist/types.js","webpack://ENABLE3D/../common/dist/physicsBody.js","webpack://ENABLE3D/../common/dist/factories.js","webpack://ENABLE3D/C:/Users/yanni/Projects/enable3d/node_modules/eventemitter3/index.js","webpack://ENABLE3D/../common/dist/wasmLoader.js","webpack://ENABLE3D/./src/shapes.ts","webpack://ENABLE3D/./src/constraints.ts","webpack://ENABLE3D/./src/three-to-ammo.js","webpack://ENABLE3D/./src/collisionEvents.ts","webpack://ENABLE3D/./src/debugDrawer.ts","webpack://ENABLE3D/./src/convexObjectBreaker.ts","webpack://ENABLE3D/./src/raycaster/raycaster.ts","webpack://ENABLE3D/./src/raycaster/closestRayResultCallback.ts","webpack://ENABLE3D/./src/raycaster/allHitsRayResultCallback.ts","webpack://ENABLE3D/./src/lib/Clock.ts","webpack://ENABLE3D/./src/physics.ts","webpack://ENABLE3D/./src/torusShape.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","default","msg","console","error","ExtendedMesh","index_1","Mesh","geometry","material","super","this","vector3","Vector3","isGroup","hasBody","id","theta","worldTheta","phi","worldPhi","getWorldDirection","Math","atan2","x","z","acos","y","has","prefix","Events","EE","fn","context","once","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","handlers","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","ExtendedObject3D","Object3D","anims","_currentAnimation","_animationActions","Map","warn","animationPlay","current","add","animation","animationAdd","play","transitionDuration","loop","mixer","animationMixer","_animationMixer","AnimationMixer","set","clipAction","next","reset","crossFadeFrom","clampWhenFinished","setLoop","LoopOnce","_defaultMaterial","MeshLambertMaterial","color","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","ExtendedGroup","Group","isMesh","PhysicsLoader","wasmLoader_1","path","callback","__loadPhysics","Ammo","then","Points","Line","Material","AnimationAction","AnimationClip","extendedObject3D_1","extendedMesh_1","eventemitter3_1","physics","ammo","ignoreScale","isSoftBody","offset","errors","checkCollisions","breakable","didUpdate","skipUpdate","_emitUpdateEvents","_needUpdate","tmpEuler","Euler","tmpQuaternion","Quaternion","tmpBtVector3","btVector3","tmpBtVector3_1","tmpBtQuaternion","btQuaternion","eventEmitter","destroy","getCollisionShape","need","updateCallback","setupEventEmitter","update","onUpdateEvent","collision","collisionCallback","onCollision","collisionEvents","data","bodies","worldTransform","getMotionState","getWorldTransform","setWorldTransform","e","q","setFromEuler","setValue","ammoQuat","w","setRotation","getRotation","q1","normalize","angle","sqrt","getOrigin","getLinearVelocity","getAngularVelocity","setLinearVelocity","velocity","setAngularVelocity","angularVelocity","applyCentralImpulse","applyCentralForce","applyCentralLocalForce","impulse","relativePosition","applyImpulse","applyLocalTorque","applyTorque","applyTorqueImpulse","setCollisionFlags","getCollisionFlags","setRestitution","setFriction","setGravity","setLinearFactor","setAngularFactor","threshold","setCcdMotionThreshold","radius","setCcdSweptSphereRadius","__rest","indexOf","propertyIsEnumerable","logger_1","defaultMaterial_1","scene","isHeadless","defaultMaterial","plane","planeConfig","materialConfig","makePlane","box","boxConfig","makeBox","sphere","sphereConfig","makeSphere","cylinder","cylinderConfig","makeCylinder","cone","coneConfig","makeCone","torus","torusConfig","makeTorus","extrude","extrudeConfig","makeExtrude","mesh","addMesh","existing","addExisting","addPlane","addBox","ground","groundConfig","addGround","addSphere","addCylinder","addCone","addTorus","addExtrude","addMaterial","isArray","position","obj","type","castShadow","receiveShadow","shape","autoCenter","bufferGeometry","rest","depth","bevelEnabled","ExtrudeBufferGeometry","assign","ExtrudeGeometry","createMesh","center","PlaneBufferGeometry","width","height","widthSegments","heightSegments","PlaneGeometry","side","DoubleSide","SphereBufferGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereGeometry","BoxBufferGeometry","depthSegments","BoxGeometry","rotateX","MathUtils","degToRad","CylinderBufferGeometry","radiusTop","radiusBottom","radiusSegments","openEnded","CylinderGeometry","ConeBufferGeometry","PI","TorusBufferGeometry","tube","radialSegments","tubularSegments","arc","TorusGeometry","keys","MeshBasicMaterial","basic","MeshNormalMaterial","normal","MeshStandardMaterial","standard","lambert","MeshPhongMaterial","phong","physical","MeshPhysicalMaterial","MeshToonMaterial","toon","LineBasicMaterial","line","PointsMaterial","points","custom","wasmSupported","WebAssembly","instantiate","Module","Uint8Array","of","Instance","loadScriptAsync","url","doneCallback","tag","document","createElement","onload","onerror","Error","async","src","head","appendChild","config","mass","collisionFlags","translateX","Constraints","physicsWorld","v","lock","bodyA","bodyB","disableCollisionsBetweenLinkedBodies","fixed","pointToPoint","hinge","slider","spring","coneTwist","frameA","frameB","dof","transformB","btTransform","setIdentity","v1","v2","dx","dy","dz","setOrigin","transformA","getCenterOfMassTransform","inverse","op_mul","zero","angularLowerLimit","angularUpperLimit","transform","getTransform","constraint","btFixedConstraint","addConstraint","pivotA","pivotB","pivotV3","targetPivotV3","btPoint2PointConstraint","axisA","axisB","axisV3","targetAxisV3","btHingeConstraint","linearLowerLimit","lll","linearUpperLimit","lul","all","aul","rotationA","setEulerZYX","rotationB","btSliderConstraint","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","stiffness","damping","angularLock","enableSpring","btGeneric6DofSpringConstraint","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","log","toAmmoV3","setStiffness","setDamping","rbAFrame","rbBFrame","btConeTwistConstraint","setAngularOnly","btGeneric6DofConstraint","TYPE","FIT","createHullShape","vertex","matrix","vertices","matrices","matrixWorld","options","_setOptions","fit","bounds","_computeBounds","btVertex","originalHull","btConvexHullShape","setMargin","margin","addVectors","max","min","multiplyScalar","vertexCount","maxVertices","hullMaxVertices","components","fromArray","isLastVertex","random","applyMatrix4","sub","addPoint","collisionShape","getNumVertices","shapeHull","btShapeHull","buildHull","getPointer","getVertexPointer","numVertices","_finishCollisionShape","_computeScale","createHACDShapes","vector","indexes","scale","triCount","hacd","HACD","SetCompacityWeight","compacityWeight","SetVolumeWeight","volumeWeight","SetNClusters","nClusters","SetNVerticesPerCH","nVerticesPerCH","SetConcavity","concavity","_malloc","triangles","SetPoints","SetTriangles","SetNPoints","SetNTriangles","pptr","tptr","HEAPF64","indices","HEAP32","Compute","_free","GetNClusters","shapes","hull","nPoints","GetNPointsCH","nTriangles","GetNTrianglesCH","hullPoints","hullTriangles","GetCH","pi","px","py","pz","createVHACDShapes","vhacd","VHACD","params","Parameters","set_m_resolution","resolution","set_m_depth","set_m_concavity","set_m_planeDownsampling","planeDownsampling","set_m_convexhullDownsampling","convexhullDownsampling","set_m_alpha","alpha","set_m_beta","beta","set_m_gamma","gamma","set_m_pca","pca","set_m_mode","set_m_maxNumVerticesPerCH","maxNumVerticesPerCH","set_m_minVolumePerCH","minVolumePerCH","set_m_convexhullApproximation","convexhullApproximation","set_m_oclAcceleration","oclAcceleration","nHulls","GetNConvexHulls","ch","ConvexHull","GetConvexHull","get_m_nPoints","get_m_points","createTriMeshShape","va","vb","vc","bta","btb","btc","triMesh","btTriangleMesh","index","ai","bi","ci","addTriangle","localScale","setScaling","concave","btBvhTriangleMeshShape","btConvexTriangleMeshShape","resources","iterateGeometries","cb","copy","invert","getInverse","setFromMatrixScale","traverse","includeInvisible","el","object3D","visible","identity","updateWorldMatrix","multiplyMatrices","isBufferGeometry","attributes","array","elements","minX","Infinity","minY","minZ","maxX","maxY","maxZ","_iterateVertices","object1","object2","eventCallback","body","AmmoDebugConstants","world","debugDrawMode","drawOnTop","maxBufferSize","Float32Array","colors","setAttribute","setUsage","vertexColors","depthTest","renderOrder","frustumCulled","enabled","debugDrawer","DebugDrawer","drawLine","drawContactPoint","reportErrorWarning","draw3dText","setDebugMode","getDebugMode","setDebugDrawer","remove","needsUpdate","debugDrawWorld","setDrawRange","from","to","heap","HEAPF32","g","b","fromX","fromY","fromZ","setXYZ","toX","toY","toZ","pointOnB","normalOnB","distance","_lifeTime","warningString","Pointer_stringify","warnedOnce","_location","_textString","debugMode","ConvexObjectBreaker","minSizeForBreak","smallDelta","tempLine1","tempPlane1","tempPlane2","tempPlane_Cut","tempCM1","tempCM2","tempVector3","tempVector3_2","tempVector3_3","tempVector3_P0","tempVector3_P1","tempVector3_P2","tempVector3_N0","tempVector3_N1","tempVector3_AB","tempVector3_CB","tempResultObjects","segments","constructor","prepareBreakableObject","userData","ammoPhysicsData","clone","subdivideByImpact","pointOfImpact","maxRadialIterations","maxRandomIterations","debris","setFromCoplanarPoints","maxTotalIterations","scope","subdivideRadial","subObject","startAngle","endAngle","numIterations","constant","applyAxisAngle","cutByPlane","obj1","obj2","output","coords","normals","numPoints","numFaces","getIndex","getVertexIndex","faceIdx","vert","idx","points1","points2","delta","numPointPairs","p0","p1","n0","n1","b1","c1","b2","c2","dot","localPlane","updateMatrix","transformPlaneToLocalSpace","segment","i0","i1","mark0","distanceToPoint","mark1","start","end","intersection","intersectLine","segmentedObject1","segmentedObject2","newMass","radius1","numPoints1","divideScalar","radius2","numPoints2","numObjects","quaternion","transformFreeVector","transformFreeVectorInverse","transformTiedVectorInverse","resultPlane","referencePoint","coplanarPoint","Raycaster","_btRayFrom","_btRayTo","_btRayCallback","hasHit","ClosestRayResultCallback","AllHitsRayResultCallback","rayTest","ClosestRaycaster","AllHitsRaycaster","h","get_m_hitPointWorld","get_m_hitNormalWorld","castObject","get_m_collisionObject","btRigidBody","threeObject","size","hh","at","getHitPointsWorld","threeObjects","objects","get_m_collisionObjects","rb","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","Date","now","getElapsedTime","getDelta","diff","newTime","rigidBodies","earlierDetectedCollisions","complexShapes","gravity","tmpVector3","tmpVector3a","tmpMatrix4","tmpMatrix4a","emptyV3","impactPoint","impactNormal","includes","removeSoftBody","removeRigidBody","destructor","splice","setupPhysicsWorld","convexBreaker","objectsToRemove","numObjectsToRemove","constraints","softBodies","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","broadphase","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","btSoftBodyRigidBodyCollisionConfiguration","softBodySolver","btDefaultSoftBodySolver","btSoftRigidDynamicsWorld","parent","fragmentDepth","setTimeout","updatePhysics","detectCollisions","deltaTime","stepSimulation","maxSubSteps","fixedTimeStep","objThree","ms","isKinematicObject","needUpdate","getWorldQuaternion","getWorldPosition","isStaticObject","getLocalScaling","compose","multiply","decompose","detectedCollisions","getDispatcher","numManifolds","getNumManifolds","contactManifold","getManifoldByIndexInternal","numContacts","getNumContacts","rb0","getBody0","rb1","getBody1","threeObject0","threeObject1","checkCollisions0","checkCollisions1","breakable0","breakable1","checkBreakable","contact","maxImpulse","contactPoint","getContactPoint","getDistance","getAppliedImpulse","get_m_positionWorldOnB","get_m_normalWorldOnB","sort","combinedName","find","fractureImpulse","MAX_FRAGMENT_DEPTH","physicsBody","vel","angVel","fragment","createDebrisFromBreakableObject","removeDebris","split","obj0","enable","disable","setup","collider","addCollider","addConstraints","raycaster","defaultParams","test","parameters","quat","axis","btHalfExtents","isGeometry","fromGeometry","vertexArray","matrixArray","indexArray","extractData","btBoxShape","btSphereShape","btCylinderShape","btCylinderShapeX","btCylinderShapeZ","btConeShape","btConeShapeX","btConeShapeZ","btCapsuleShape","btCapsuleShapeX","btCapsuleShapeZ","SIMD_PI","subdivisions","gap","cos","cylinderShape","compoundShape","btCompoundShape","forward","rotation","rotate","addChildShape","createTorusShape","mergeCollisionShapesToCompoundShape","collisionShapes","pos","getWorldScale","toString","compound","collisionGroup","collisionMask","addChildren","map","createCollisionShape","localTransform","finishCollisionShape","rigidBody","collisionShapeToRigidBody","addRigidBodyToWorld","prepareThreeObjectForCollisionShape","cs","children","child","addRigidBody","ptr","values","setLocalScaling","disableDeactivation","motionState","btDefaultMotionState","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","setActivationState"],"mappings":"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","file":"enable3d.ammoPhysics.0.21.0.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ENABLE3D\"] = factory(require(\"THREE\"));\n\telse\n\t\troot[\"ENABLE3D\"] = factory(root[\"THREE\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst logger = (msg) => {\r\n    console.error(`%c [enable3d] ${msg} `, 'background: #222; color: #bada55');\r\n};\r\nexports.default = logger;\r\n//# sourceMappingURL=logger.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ExtendedMesh = void 0;\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nclass ExtendedMesh extends index_1.Mesh {\r\n    constructor(geometry, material) {\r\n        super(geometry, material);\r\n        this.vector3 = new index_1.Vector3();\r\n        this.isGroup = false;\r\n        this.hasBody = false;\r\n        this.name = `object-${this.id}`;\r\n    }\r\n    /** Returns all values relative to the world. */\r\n    get world() {\r\n        return {\r\n            theta: this.worldTheta,\r\n            phi: this.worldPhi\r\n        };\r\n    }\r\n    /** Get the theta relative to the world. */\r\n    get worldTheta() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.atan2(this.vector3.x, this.vector3.z);\r\n    }\r\n    /** Get the phi relative to the world. */\r\n    get worldPhi() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.acos(this.vector3.y);\r\n    }\r\n}\r\nexports.ExtendedMesh = ExtendedMesh;\r\n//# sourceMappingURL=extendedMesh.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ExtendedObject3D = void 0;\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\n/**\r\n * Extends the Object3D class from THREE.js and implements properties from Line, Mesh and Points.\r\n */\r\nclass ExtendedObject3D extends index_1.Object3D {\r\n    constructor() {\r\n        super();\r\n        this.vector3 = new index_1.Vector3();\r\n        this.isGroup = false;\r\n        this.hasBody = false;\r\n        this.anims = {}; // deprecated\r\n        this._currentAnimation = '';\r\n        this._animationActions = new Map();\r\n        this.name = `object-${this.id}`;\r\n    }\r\n    /** setAction(name) is deprecated. Use animation.play(name) instead! */\r\n    setAction(name) {\r\n        console.warn('[enable3d] setAction(name) is deprecated. Use animation.play(name) instead!');\r\n        this.animationPlay(name);\r\n    }\r\n    /** Returns all values relative to the world. */\r\n    get world() {\r\n        return {\r\n            theta: this.worldTheta,\r\n            phi: this.worldPhi\r\n        };\r\n    }\r\n    /** Get the theta relative to the world. */\r\n    get worldTheta() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.atan2(this.vector3.x, this.vector3.z);\r\n    }\r\n    /** Get the phi relative to the world. */\r\n    get worldPhi() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.acos(this.vector3.y);\r\n    }\r\n    get animation() {\r\n        return {\r\n            current: this._currentAnimation,\r\n            add: (key, animation) => this.animationAdd(key, animation),\r\n            play: (name, transitionDuration = 500, loop = true) => this.animationPlay(name, transitionDuration, loop),\r\n            mixer: this.animationMixer\r\n        };\r\n    }\r\n    set animationMixer(animationMixer) {\r\n        this._animationMixer = animationMixer;\r\n    }\r\n    get animationMixer() {\r\n        if (!this._animationMixer)\r\n            this._animationMixer = new index_1.AnimationMixer(this);\r\n        return this._animationMixer;\r\n    }\r\n    animationAdd(key, animation) {\r\n        this._animationActions.set(key, this.animationMixer.clipAction(animation));\r\n    }\r\n    animationPlay(name, transitionDuration = 500, loop = true) {\r\n        const next = this._animationActions.get(name);\r\n        const current = this._animationActions.get(this._currentAnimation);\r\n        if (next) {\r\n            next.reset();\r\n            if (current) {\r\n                next.crossFadeFrom(current, transitionDuration / 1000, true);\r\n                next.clampWhenFinished = true;\r\n            }\r\n            if (!loop)\r\n                next.setLoop(index_1.LoopOnce, 0);\r\n            next.play();\r\n        }\r\n        this._currentAnimation = name;\r\n    }\r\n}\r\nexports.ExtendedObject3D = ExtendedObject3D;\r\nexports.default = ExtendedObject3D;\r\n//# sourceMappingURL=extendedObject3D.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nclass DefaultMaterial {\r\n    constructor() {\r\n        this._defaultMaterial = new index_1.MeshLambertMaterial({ color: 0xcccccc });\r\n    }\r\n    get() {\r\n        return this._defaultMaterial;\r\n    }\r\n}\r\nexports.default = DefaultMaterial;\r\n//# sourceMappingURL=defaultMaterial.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// https://www.typescriptlang.org/docs/handbook/mixins.html\r\nconst applyMixins = (derivedCtor, baseCtors) => {\r\n    baseCtors.forEach(baseCtor => {\r\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\r\n            // @ts-ignore\r\n            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\r\n        });\r\n    });\r\n};\r\nexports.default = applyMixins;\r\n//# sourceMappingURL=applyMixins.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ExtendedGroup = void 0;\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nclass ExtendedGroup extends index_1.Group {\r\n    constructor() {\r\n        super();\r\n        this.isMesh = false;\r\n        this.hasBody = false;\r\n        this.name = `object-${this.id}`;\r\n    }\r\n}\r\nexports.ExtendedGroup = ExtendedGroup;\r\n//# sourceMappingURL=extendedGroup.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PhysicsLoader = void 0;\r\nconst wasmLoader_1 = require(\"./wasmLoader\");\r\nconst PhysicsLoader = (path, callback) => {\r\n    if (typeof window !== 'undefined')\r\n        window.__loadPhysics = true;\r\n    wasmLoader_1.default(path, () => {\r\n        Ammo().then(() => {\r\n            callback();\r\n        });\r\n    });\r\n};\r\nexports.PhysicsLoader = PhysicsLoader;\r\n//# sourceMappingURL=physicsLoader.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Group = exports.Points = exports.Line = exports.Material = exports.Mesh = exports.Object3D = exports.AnimationAction = exports.AnimationClip = exports.AnimationMixer = exports.ExtendedMesh = exports.ExtendedObject3D = void 0;\r\nconst extendedObject3D_1 = require(\"./extendedObject3D\");\r\nObject.defineProperty(exports, \"ExtendedObject3D\", { enumerable: true, get: function () { return extendedObject3D_1.ExtendedObject3D; } });\r\nconst extendedMesh_1 = require(\"./extendedMesh\");\r\nObject.defineProperty(exports, \"ExtendedMesh\", { enumerable: true, get: function () { return extendedMesh_1.ExtendedMesh; } });\r\n// TODO fix this export\r\n// export { ThirdPersonControls } from '../misc/thirdPersonControls'\r\nvar index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nObject.defineProperty(exports, \"AnimationMixer\", { enumerable: true, get: function () { return index_1.AnimationMixer; } });\r\nObject.defineProperty(exports, \"AnimationClip\", { enumerable: true, get: function () { return index_1.AnimationClip; } });\r\nObject.defineProperty(exports, \"AnimationAction\", { enumerable: true, get: function () { return index_1.AnimationAction; } });\r\nObject.defineProperty(exports, \"Object3D\", { enumerable: true, get: function () { return index_1.Object3D; } });\r\nObject.defineProperty(exports, \"Mesh\", { enumerable: true, get: function () { return index_1.Mesh; } });\r\nObject.defineProperty(exports, \"Material\", { enumerable: true, get: function () { return index_1.Material; } });\r\nObject.defineProperty(exports, \"Line\", { enumerable: true, get: function () { return index_1.Line; } });\r\nObject.defineProperty(exports, \"Points\", { enumerable: true, get: function () { return index_1.Points; } });\r\nObject.defineProperty(exports, \"Group\", { enumerable: true, get: function () { return index_1.Group; } });\r\n//# sourceMappingURL=types.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst eventemitter3_1 = require(\"eventemitter3\");\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nclass PhysicsBody {\r\n    constructor(physics, ammo) {\r\n        this.physics = physics;\r\n        this.ammo = ammo;\r\n        this.ignoreScale = false;\r\n        this.isSoftBody = false;\r\n        this.offset = { x: 0, y: 0, z: 0 };\r\n        this.errors = [];\r\n        this.checkCollisions = false;\r\n        this.breakable = false;\r\n        this.didUpdate = false;\r\n        /** Skip syncing the mesh to the physics body. */\r\n        this.skipUpdate = false;\r\n        this._emitUpdateEvents = false;\r\n        this._needUpdate = false;\r\n        this.tmpEuler = new index_1.Euler();\r\n        this.tmpQuaternion = new index_1.Quaternion();\r\n        this.tmpBtVector3 = new Ammo.btVector3();\r\n        this.tmpBtVector3_1 = new Ammo.btVector3();\r\n        this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1);\r\n        this.eventEmitter = new eventemitter3_1.EventEmitter();\r\n        // @ts-ignore\r\n        this.name = ammo.name;\r\n    }\r\n    /**\r\n     * Don't call this manually! Do physics.destroy() instead.\r\n     */\r\n    destructor() {\r\n        // remove events\r\n        if (this.eventEmitter)\r\n            this.eventEmitter.removeAllListeners();\r\n        // destroy tmp ammo values\r\n        Ammo.destroy(this.tmpBtVector3);\r\n        Ammo.destroy(this.tmpBtVector3_1);\r\n        Ammo.destroy(this.tmpBtQuaternion);\r\n        // destory collision shape\r\n        Ammo.destroy(this.ammo.getCollisionShape());\r\n        // destroy body\r\n        Ammo.destroy(this.ammo);\r\n    }\r\n    setupEventEmitter() {\r\n        if (typeof this.eventEmitter === 'undefined')\r\n            this.eventEmitter = new eventemitter3_1.EventEmitter();\r\n    }\r\n    get needUpdate() {\r\n        return this._needUpdate;\r\n    }\r\n    set needUpdate(need) {\r\n        if (!need && this._needUpdate)\r\n            this.didUpdate = true;\r\n        this._needUpdate = need;\r\n    }\r\n    onUpdateEvent(updateCallback, once = false) {\r\n        this.setupEventEmitter();\r\n        this._emitUpdateEvents = true;\r\n        if (once)\r\n            this.eventEmitter.once('update', () => {\r\n                updateCallback();\r\n            });\r\n        else\r\n            this.eventEmitter.on('update', () => {\r\n                updateCallback();\r\n            });\r\n    }\r\n    get on() {\r\n        return {\r\n            update: (updateCallback) => this.onUpdateEvent(updateCallback),\r\n            collision: (collisionCallback) => this.onCollision(collisionCallback)\r\n        };\r\n    }\r\n    get once() {\r\n        return {\r\n            update: (updateCallback) => this.onUpdateEvent(updateCallback, true)\r\n        };\r\n    }\r\n    onCollision(collisionCallback) {\r\n        this.checkCollisions = true;\r\n        this.physics.collisionEvents.on('collision', (data) => {\r\n            const { bodies, event } = data;\r\n            if (bodies[0].name === this.name)\r\n                collisionCallback(bodies[1], event);\r\n            else if (bodies[1].name === this.name)\r\n                collisionCallback(bodies[0], event);\r\n        });\r\n    }\r\n    /** You have to call transform() before you can get or set the body's position or rotation. (for headless mode only) */\r\n    transform() {\r\n        const t = this.physics.worldTransform;\r\n        this.ammo.getMotionState().getWorldTransform(t);\r\n    }\r\n    /** You have to call refresh() after you set the position or rotation of the body. (for headless mode only) */\r\n    refresh() {\r\n        const t = this.physics.worldTransform;\r\n        this.ammo.getMotionState().setWorldTransform(t);\r\n    }\r\n    /** Set the rotation in radians. (for headless mode only) */\r\n    setRotation(x, y, z) {\r\n        const e = this.tmpEuler.set(x, y, z);\r\n        const q = this.tmpQuaternion.set(0, 0, 0, 1);\r\n        q.setFromEuler(e);\r\n        this.tmpBtQuaternion.setValue(0, 0, 0, 1);\r\n        const ammoQuat = this.tmpBtQuaternion;\r\n        ammoQuat.setValue(q.x, q.y, q.z, q.w);\r\n        const t = this.physics.worldTransform;\r\n        t.setRotation(ammoQuat);\r\n    }\r\n    /** Get the rotation in radians. (for headless mode only) */\r\n    get rotation() {\r\n        // https://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n        let x, y, z;\r\n        const t = this.physics.worldTransform;\r\n        const ammoQuat = t.getRotation();\r\n        let q1 = this.tmpQuaternion.set(ammoQuat.x(), ammoQuat.y(), ammoQuat.z(), ammoQuat.w());\r\n        if (q1.w > 1)\r\n            q1 = q1.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalized\r\n        const angle = 2 * Math.acos(q1.w);\r\n        const s = Math.sqrt(1 - q1.w * q1.w); // assuming quaternion normalized then w is less than 1, so term always positive.\r\n        if (s < 0.001) {\r\n            // test to avoid divide by zero, s is always positive due to sqrt\r\n            // if s close to zero then direction of axis not important\r\n            x = q1.x; // if it is important that axis is normalized then replace with x=1; y=z=0;\r\n            y = q1.y;\r\n            z = q1.z;\r\n        }\r\n        else {\r\n            x = q1.x / s; // normalized axis\r\n            y = q1.y / s;\r\n            z = q1.z / s;\r\n        }\r\n        return { x: x * angle, y: y * angle, z: z * angle };\r\n    }\r\n    /** Set position. (for headless mode only) */\r\n    setPosition(x, y, z) {\r\n        const t = this.physics.worldTransform;\r\n        t.getOrigin().setValue(x, y, z);\r\n    }\r\n    /** Get position. (for headless mode only) */\r\n    get position() {\r\n        const t = this.physics.worldTransform;\r\n        return { x: t.getOrigin().x(), y: t.getOrigin().y(), z: t.getOrigin().z() };\r\n    }\r\n    get velocity() {\r\n        return {\r\n            x: this.ammo.getLinearVelocity().x(),\r\n            y: this.ammo.getLinearVelocity().y(),\r\n            z: this.ammo.getLinearVelocity().z()\r\n        };\r\n    }\r\n    get angularVelocity() {\r\n        return {\r\n            x: this.ammo.getAngularVelocity().x(),\r\n            y: this.ammo.getAngularVelocity().y(),\r\n            z: this.ammo.getAngularVelocity().z()\r\n        };\r\n    }\r\n    setVelocity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityX(value) {\r\n        this.tmpBtVector3.setValue(value, this.velocity.y, this.velocity.z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityY(value) {\r\n        this.tmpBtVector3.setValue(this.velocity.x, value, this.velocity.z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityZ(value) {\r\n        this.tmpBtVector3.setValue(this.velocity.x, this.velocity.y, value);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityX(value) {\r\n        this.tmpBtVector3.setValue(value, this.angularVelocity.y, this.angularVelocity.z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityY(value) {\r\n        this.tmpBtVector3.setValue(this.angularVelocity.x, value, this.angularVelocity.z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityZ(value) {\r\n        this.tmpBtVector3.setValue(this.angularVelocity.x, this.angularVelocity.y, value);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    // Apply Force methods\r\n    applyForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceX(value) {\r\n        this.tmpBtVector3.setValue(value, 0, 0);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceY(value) {\r\n        this.tmpBtVector3.setValue(0, value, 0);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceZ(value) {\r\n        this.tmpBtVector3.setValue(0, 0, value);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    // Apply \"Something\" Methods\r\n    applyCentralForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralForce(this.tmpBtVector3);\r\n    }\r\n    applyCentralImpulse(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyCentralLocalForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralLocalForce(this.tmpBtVector3);\r\n    }\r\n    applyImpulse(impulse, relativePosition) {\r\n        this.tmpBtVector3.setValue(impulse.x || 0, impulse.y || 0, impulse.z || 0);\r\n        this.tmpBtVector3_1.setValue(relativePosition.x || 0, relativePosition.y || 0, relativePosition.z || 0);\r\n        this.ammo.applyImpulse(this.tmpBtVector3, this.tmpBtVector3_1);\r\n    }\r\n    applyLocalTorque(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyLocalTorque(this.tmpBtVector3);\r\n    }\r\n    applyTorque(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyTorque(this.tmpBtVector3);\r\n    }\r\n    applyTorqueImpulse(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyTorqueImpulse(this.tmpBtVector3);\r\n    }\r\n    /**\r\n     * Add the collision flags\r\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\r\n     */\r\n    // https://github.com/bulletphysics/bullet3/blob/aae8048722f2596f7e2bdd52d2a1dcb52a218f2b/src/BulletCollision/CollisionDispatch/btCollisionObject.h#L128\r\n    setCollisionFlags(value) {\r\n        this.ammo.setCollisionFlags(value);\r\n    }\r\n    /**\r\n     * Get the collision flags\r\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\r\n     */\r\n    getCollisionFlags() {\r\n        return this.ammo.getCollisionFlags();\r\n    }\r\n    /**\r\n     * Set the restitution (same as bounciness)\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setRestitution(value) {\r\n        this.ammo.setRestitution(value);\r\n    }\r\n    /**\r\n     * Set the bounciness (same as restitution)\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setBounciness(value) {\r\n        this.setRestitution(value);\r\n    }\r\n    /**\r\n     * Set the friction\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setFriction(value) {\r\n        this.ammo.setFriction(value);\r\n    }\r\n    /** Set per body gravity */\r\n    setGravity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setGravity(this.tmpBtVector3);\r\n    }\r\n    setLinearFactor(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setLinearFactor(this.tmpBtVector3);\r\n    }\r\n    setAngularFactor(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setAngularFactor(this.tmpBtVector3);\r\n    }\r\n    setCcdMotionThreshold(threshold) {\r\n        this.ammo.setCcdMotionThreshold(threshold);\r\n    }\r\n    setCcdSweptSphereRadius(radius) {\r\n        this.ammo.setCcdSweptSphereRadius(radius);\r\n    }\r\n}\r\nexports.default = PhysicsBody;\r\n//# sourceMappingURL=physicsBody.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nconst extendedMesh_1 = require(\"./extendedMesh\");\r\nconst logger_1 = require(\"./logger\");\r\nconst defaultMaterial_1 = require(\"./defaultMaterial\");\r\nclass Factories {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.isHeadless = scene === 'headless' ? true : false;\r\n        this.defaultMaterial = new defaultMaterial_1.default();\r\n    }\r\n    get make() {\r\n        return {\r\n            plane: (planeConfig = {}, materialConfig = {}) => this.makePlane(planeConfig, materialConfig),\r\n            box: (boxConfig = {}, materialConfig = {}) => this.makeBox(boxConfig, materialConfig),\r\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.makeSphere(sphereConfig, materialConfig),\r\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.makeCylinder(cylinderConfig, materialConfig),\r\n            cone: (coneConfig = {}, materialConfig = {}) => this.makeCone(coneConfig, materialConfig),\r\n            torus: (torusConfig = {}, materialConfig = {}) => this.makeTorus(torusConfig, materialConfig),\r\n            extrude: (extrudeConfig, materialConfig = {}) => this.makeExtrude(extrudeConfig, materialConfig)\r\n        };\r\n    }\r\n    get add() {\r\n        return {\r\n            // effectComposer: () => this.addEffectComposer(),\r\n            mesh: (mesh) => this.addMesh(mesh),\r\n            // group: (...children) => this.addGroup(children),\r\n            existing: (object) => this.addExisting(object),\r\n            //  Geometry\r\n            plane: (planeConfig = {}, materialConfig = {}) => this.addPlane(planeConfig, materialConfig),\r\n            box: (boxConfig = {}, materialConfig = {}) => this.addBox(boxConfig, materialConfig),\r\n            ground: (groundConfig, materialConfig = {}) => this.addGround(groundConfig, materialConfig),\r\n            //...\r\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.addSphere(sphereConfig, materialConfig),\r\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.addCylinder(cylinderConfig, materialConfig),\r\n            cone: (coneConfig = {}, materialConfig = {}) => this.addCone(coneConfig, materialConfig),\r\n            torus: (torusConfig = {}, materialConfig = {}) => this.addTorus(torusConfig, materialConfig),\r\n            extrude: (extrudeConfig, materialConfig = {}) => this.addExtrude(extrudeConfig, materialConfig),\r\n            //...\r\n            material: (materialConfig = {}) => this.addMaterial(materialConfig)\r\n        };\r\n    }\r\n    addExisting(...object) {\r\n        if (this.scene === 'headless')\r\n            return;\r\n        this.scene.add(...object);\r\n    }\r\n    addMesh(mesh) {\r\n        if (Array.isArray(mesh)) {\r\n            for (let i = 0; i < mesh.length; i++) {\r\n                this.addExisting(mesh[i]);\r\n            }\r\n        }\r\n        else {\r\n            this.addExisting(mesh);\r\n        }\r\n        return this;\r\n    }\r\n    createMesh(geometry, material, position) {\r\n        const { x = 0, y = 0, z = 0 } = position;\r\n        let obj;\r\n        switch (!Array.isArray(material) && material.type) {\r\n            case 'LineBasicMaterial':\r\n                obj = new index_1.Line(geometry, material);\r\n                break;\r\n            case 'PointsMaterial':\r\n                obj = new index_1.Points(geometry, material);\r\n                break;\r\n            default:\r\n                obj = new extendedMesh_1.ExtendedMesh(geometry, material);\r\n                break;\r\n        }\r\n        obj.position.set(x, y, z);\r\n        obj.castShadow = obj.receiveShadow = true;\r\n        return obj;\r\n    }\r\n    makeExtrude(extrudeConfig, materialConfig) {\r\n        const { x, y, z, name, shape, autoCenter = true, breakable = false, bufferGeometry = true } = extrudeConfig, rest = __rest(extrudeConfig\r\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\r\n        , [\"x\", \"y\", \"z\", \"name\", \"shape\", \"autoCenter\", \"breakable\", \"bufferGeometry\"]);\r\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\r\n        const { depth = 1, bevelEnabled = false } = rest;\r\n        const geometry = bufferGeometry || breakable || this.isHeadless\r\n            ? new index_1.ExtrudeBufferGeometry(shape, Object.assign({ depth, bevelEnabled }, rest))\r\n            : new index_1.ExtrudeGeometry(shape, Object.assign({ depth, bevelEnabled }, rest));\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        // auto adjust the center for custom shapes\r\n        if (autoCenter)\r\n            mesh.geometry.center();\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'extrude';\r\n        return mesh;\r\n    }\r\n    addExtrude(extrudeConfig, materialConfig = {}) {\r\n        const obj = this.makeExtrude(extrudeConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makePlane(planeConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false, bufferGeometry = true } = planeConfig, rest = __rest(planeConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\", \"bufferGeometry\"]);\r\n        const geometry = bufferGeometry || breakable || this.isHeadless\r\n            ? new index_1.PlaneBufferGeometry(rest.width || 1, rest.height || 1, rest.widthSegments || 1, rest.heightSegments || 1)\r\n            : new index_1.PlaneGeometry(rest.width || 1, rest.height || 1, rest.widthSegments || 1, rest.heightSegments || 1);\r\n        const material = this.addMaterial(materialConfig);\r\n        material.side = index_1.DoubleSide;\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'plane';\r\n        return mesh;\r\n    }\r\n    addPlane(planeConfig, materialConfig) {\r\n        const obj = this.makePlane(planeConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeSphere(sphereConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false, bufferGeometry = true } = sphereConfig, rest = __rest(sphereConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\", \"bufferGeometry\"]);\r\n        const geometry = bufferGeometry || breakable || this.isHeadless\r\n            ? new index_1.SphereBufferGeometry(rest.radius || 1, rest.widthSegments || 16, rest.heightSegments || 12, rest.phiStart || undefined, rest.phiLength || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined)\r\n            : new index_1.SphereGeometry(rest.radius || 1, rest.widthSegments || 16, rest.heightSegments || 12, rest.phiStart || undefined, rest.phiLength || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'sphere';\r\n        return mesh;\r\n    }\r\n    addSphere(sphereConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeSphere(sphereConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeBox(boxConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false, bufferGeometry = true } = boxConfig, rest = __rest(boxConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\", \"bufferGeometry\"]);\r\n        const geometry = bufferGeometry || breakable || this.isHeadless\r\n            ? new index_1.BoxBufferGeometry(rest.width || 1, rest.height || 1, rest.depth || 1, rest.widthSegments || undefined, rest.heightSegments || undefined, rest.depthSegments || undefined)\r\n            : new index_1.BoxGeometry(rest.width || 1, rest.height || 1, rest.depth || 1, rest.widthSegments || undefined, rest.heightSegments || undefined, rest.depthSegments || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'box';\r\n        return mesh;\r\n    }\r\n    addBox(boxConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeBox(boxConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    addGround(groundConfig, materialConfig = {}) {\r\n        const obj = this.makeBox(groundConfig, materialConfig);\r\n        obj.rotateX(index_1.MathUtils.degToRad(90));\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeCylinder(cylinderConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false, bufferGeometry = true } = cylinderConfig, rest = __rest(cylinderConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\", \"bufferGeometry\"]);\r\n        const geometry = bufferGeometry || breakable || this.isHeadless\r\n            ? new index_1.CylinderBufferGeometry(rest.radiusTop || 1, rest.radiusBottom || 1, rest.height || 1, rest.radiusSegments || undefined, rest.heightSegments || undefined, rest.openEnded || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined)\r\n            : new index_1.CylinderGeometry(rest.radiusTop || 1, rest.radiusBottom || 1, rest.height || 1, rest.radiusSegments || undefined, rest.heightSegments || undefined, rest.openEnded || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'cylinder';\r\n        return mesh;\r\n    }\r\n    addCylinder(cylinderConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeCylinder(cylinderConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeCone(coneConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false, bufferGeometry = true } = coneConfig, rest = __rest(coneConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\", \"bufferGeometry\"]);\r\n        const geometry = bufferGeometry || breakable || this.isHeadless\r\n            ? new index_1.ConeBufferGeometry(rest.radius || 1, rest.height || 1, rest.radiusSegments || 8, rest.heightSegments || 1, rest.openEnded || false, rest.thetaStart || 0, rest.thetaLength || 2 * Math.PI)\r\n            : new index_1.ConeBufferGeometry(rest.radius || 1, rest.height || 1, rest.radiusSegments || 8, rest.heightSegments || 1, rest.openEnded || false, rest.thetaStart || 0, rest.thetaLength || 2 * Math.PI);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'cone';\r\n        return mesh;\r\n    }\r\n    addCone(coneConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeCone(coneConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    // https://threejs.org/docs/index.html#api/en/geometries/TorusBufferGeometry\r\n    makeTorus(torusConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false, bufferGeometry = true } = torusConfig, rest = __rest(torusConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\", \"bufferGeometry\"]);\r\n        const geometry = bufferGeometry || breakable || this.isHeadless\r\n            ? new index_1.TorusBufferGeometry(rest.radius || undefined, rest.tube || undefined, rest.radialSegments || undefined, rest.tubularSegments || undefined, rest.arc || undefined)\r\n            : new index_1.TorusGeometry(rest.radius || undefined, rest.tube || undefined, rest.radialSegments || undefined, rest.tubularSegments || undefined, rest.arc || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'torus';\r\n        return mesh;\r\n    }\r\n    addTorus(torusConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeTorus(torusConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    addMaterial(materialConfig = {}) {\r\n        const type = Object.keys(materialConfig)[0];\r\n        let material;\r\n        // if (type) {\r\n        //   const { map } = materialConfig[type]\r\n        //   if (typeof map === 'string') materialConfig[type].map = this.loadTexture(map)\r\n        // }\r\n        // always share the same material in headless mode to save memory\r\n        if (this.scene === 'headless')\r\n            return this.defaultMaterial.get();\r\n        switch (type) {\r\n            case 'basic':\r\n                material = new index_1.MeshBasicMaterial(materialConfig.basic);\r\n                break;\r\n            case 'normal':\r\n                material = new index_1.MeshNormalMaterial(materialConfig.normal);\r\n                break;\r\n            case 'standard':\r\n                material = new index_1.MeshStandardMaterial(materialConfig.standard);\r\n                break;\r\n            case 'lambert':\r\n                material = new index_1.MeshLambertMaterial(materialConfig.lambert);\r\n                break;\r\n            case 'phong':\r\n                material = new index_1.MeshPhongMaterial(materialConfig.phong);\r\n                break;\r\n            case 'physical':\r\n                if (typeof materialConfig.physical !== 'undefined') {\r\n                    material = new index_1.MeshPhysicalMaterial(materialConfig.physical);\r\n                }\r\n                else {\r\n                    logger_1.default('You need to pass parameters to the physical material. (Fallback to default material)');\r\n                    material = this.defaultMaterial.get();\r\n                }\r\n                break;\r\n            case 'toon':\r\n                material = new index_1.MeshToonMaterial(materialConfig.toon);\r\n                break;\r\n            case 'line':\r\n                material = new index_1.LineBasicMaterial(materialConfig.line);\r\n                break;\r\n            case 'points':\r\n                material = new index_1.PointsMaterial(materialConfig.points);\r\n                break;\r\n            case 'custom':\r\n                material = materialConfig.custom || this.defaultMaterial.get();\r\n                break;\r\n            default:\r\n                material = this.defaultMaterial.get();\r\n                break;\r\n        }\r\n        return material;\r\n    }\r\n}\r\nexports.default = Factories;\r\n//# sourceMappingURL=factories.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Inspired by https://github.com/playcanvas/engine/blob/master/examples/wasm-loader.js\r\nconst wasmSupported = (() => {\r\n    try {\r\n        if (typeof WebAssembly === 'object' && typeof WebAssembly.instantiate === 'function') {\r\n            const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\r\n            if (module instanceof WebAssembly.Module)\r\n                return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\r\n        }\r\n    }\r\n    catch (e) { }\r\n    return false;\r\n})();\r\nconst loadScriptAsync = (url, doneCallback) => {\r\n    var tag = document.createElement('script');\r\n    tag.onload = () => {\r\n        doneCallback();\r\n    };\r\n    tag.onerror = () => {\r\n        throw new Error('failed to load ' + url);\r\n    };\r\n    tag.async = true;\r\n    tag.src = url;\r\n    document.head.appendChild(tag);\r\n};\r\nconst loadAmmoModule = (path, doneCallback) => {\r\n    // console.log(wasmSupported ? 'WebAssembly is supported' : 'WebAssembly is not supported')\r\n    if (wasmSupported)\r\n        loadScriptAsync(`${path}/ammo.wasm.js`, () => doneCallback());\r\n    else\r\n        loadScriptAsync(`${path}/ammo.js`, () => doneCallback());\r\n};\r\nexports.default = loadAmmoModule;\r\n//# sourceMappingURL=wasmLoader.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport {\r\n  SphereConfig,\r\n  MaterialConfig,\r\n  BoxConfig,\r\n  GroundConfig,\r\n  CylinderConfig,\r\n  ExtendedObject3D,\r\n  ExtrudeConfig,\r\n  TorusConfig,\r\n  AddExistingConfig,\r\n  PlaneConfig,\r\n  ConeConfig\r\n} from '@enable3d/common/dist/types'\r\nimport Factories from '@enable3d/common/dist/factories'\r\n\r\nclass Shapes {\r\n  constructor(\r\n    private factory: Factories,\r\n    private addExisting: (object: ExtendedObject3D, config?: AddExistingConfig) => void\r\n  ) {}\r\n\r\n  public addPlane(planeConfig: PlaneConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const plane = this.factory.add.plane(planeConfig, materialConfig)\r\n    this.addExisting(plane, planeConfig)\r\n    return plane\r\n  }\r\n\r\n  public addSphere(sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const sphere = this.factory.add.sphere(sphereConfig, materialConfig)\r\n    this.addExisting(sphere, sphereConfig)\r\n    return sphere\r\n  }\r\n\r\n  public addBox(boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const box = this.factory.add.box(boxConfig, materialConfig)\r\n    this.addExisting(box, boxConfig)\r\n    return box\r\n  }\r\n\r\n  public addGround(groundConfig: GroundConfig, materialConfig: MaterialConfig = {}) {\r\n    const ground = this.factory.add.ground(groundConfig, materialConfig)\r\n    const config = { ...groundConfig, mass: 0, collisionFlags: 1 }\r\n    this.addExisting(ground, config)\r\n    return ground\r\n  }\r\n\r\n  public addCylinder(cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const cylinder = this.factory.add.cylinder(cylinderConfig, materialConfig)\r\n    this.addExisting(cylinder, cylinderConfig)\r\n    return cylinder\r\n  }\r\n\r\n  public addCone(coneConfig: ConeConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const cone = this.factory.add.cone(coneConfig, materialConfig)\r\n    this.addExisting(cone, coneConfig)\r\n    return cone\r\n  }\r\n\r\n  public addTorus(torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const torus = this.factory.add.torus(torusConfig, materialConfig)\r\n    this.addExisting(torus, torusConfig)\r\n    return torus\r\n  }\r\n\r\n  public addExtrude(extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}) {\r\n    const object = this.factory.add.extrude(extrudeConfig, materialConfig)\r\n    object.translateX(1)\r\n    this.addExisting(object)\r\n    return object\r\n  }\r\n}\r\n\r\nexport default Shapes\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\n// Inspired by https://github.com/donmccurdy/aframe-physics-system/blob/master/src/components/ammo-constraint.js\r\n\r\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\r\nimport { XYZ } from '@enable3d/common/dist/types'\r\n\r\nexport default class Constraints {\r\n  public tmpBtVector3 = new Ammo.btVector3()\r\n\r\n  constructor(public worldTransform: Ammo.btTransform, public physicsWorld: Ammo.btDiscreteDynamicsWorld) {}\r\n\r\n  private toAmmoV3(v?: XYZ, d: number = 0) {\r\n    return new Ammo.btVector3(\r\n      typeof v?.x !== 'undefined' ? v.x : d,\r\n      typeof v?.y !== 'undefined' ? v.y : d,\r\n      typeof v?.z !== 'undefined' ? v.z : d\r\n    )\r\n  }\r\n\r\n  public get addConstraints() {\r\n    return {\r\n      lock: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\r\n        this.lock(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\r\n      fixed: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\r\n        this.fixed(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\r\n      pointToPoint: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          pivotA?: XYZ\r\n          pivotB?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.pointToPoint(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      hinge: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          pivotA?: XYZ\r\n          pivotB?: XYZ\r\n          axisA?: XYZ\r\n          axisB?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.hinge(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      slider: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          frameA?: XYZ\r\n          frameB?: XYZ\r\n          linearLowerLimit?: number\r\n          linearUpperLimit?: number\r\n          angularLowerLimit?: number\r\n          angularUpperLimit?: number\r\n        } = {},\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.slider(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      spring: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          stiffness?: number\r\n          damping?: number\r\n          angularLock?: boolean\r\n          linearLowerLimit?: XYZ\r\n          linearUpperLimit?: XYZ\r\n          angularLowerLimit?: XYZ\r\n          angularUpperLimit?: XYZ\r\n          center?: boolean\r\n          offset?: XYZ\r\n          enableSpring?: boolean\r\n        } = {},\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.spring(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      coneTwist: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          frameA: XYZ\r\n          frameB: XYZ\r\n        } = { frameA: {}, frameB: {} },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.coneTwist(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      dof: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config?: {\r\n          linearLowerLimit?: XYZ\r\n          linearUpperLimit?: XYZ\r\n          angularLowerLimit?: XYZ\r\n          angularUpperLimit?: XYZ\r\n          center?: boolean\r\n          offset?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.dof(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies)\r\n    }\r\n  }\r\n\r\n  private getTransform(\r\n    bodyA: Ammo.btRigidBody,\r\n    bodyB: Ammo.btRigidBody,\r\n    offset: { x: number; y: number; z: number } = { x: 0, y: 0, z: 0 },\r\n    center: boolean = false\r\n  ) {\r\n    // @ts-ignore\r\n    offset = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const centerVector = (v1: Ammo.btVector3, v2: Ammo.btVector3) => {\r\n      var dx = (v1.x() - v2.x()) / 2 + offset.x\r\n      var dy = (v1.y() - v2.y()) / 2 + offset.y\r\n      var dz = (v1.z() - v2.z()) / 2 + offset.z\r\n      return new Ammo.btVector3(dx, dy, dz)\r\n    }\r\n\r\n    const transformB = new Ammo.btTransform()\r\n    transformB.setIdentity()\r\n\r\n    if (!center) {\r\n      // offset\r\n      transformB.setOrigin(new Ammo.btVector3(offset.x, offset.y, offset.z))\r\n\r\n      const transformA = bodyA\r\n        .getCenterOfMassTransform()\r\n        .inverse()\r\n        .op_mul(bodyB.getWorldTransform())\r\n        .op_mul(transformB)\r\n\r\n      return { transformA: transformA, transformB: transformB }\r\n    } else {\r\n      const center = centerVector(bodyA.getWorldTransform().getOrigin(), bodyB.getWorldTransform().getOrigin())\r\n\r\n      const transformB = new Ammo.btTransform()\r\n      transformB.setIdentity()\r\n      transformB.setOrigin(center)\r\n\r\n      const transformA = bodyA\r\n        .getCenterOfMassTransform()\r\n        .inverse()\r\n        .op_mul(bodyB.getWorldTransform())\r\n\r\n      transformA.op_mul(transformB)\r\n\r\n      return { transformA: transformA, transformB: transformB }\r\n    }\r\n  }\r\n\r\n  private lock(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\r\n    const zero = { x: 0, y: 0, z: 0 }\r\n    return this.dof(\r\n      bodyA,\r\n      bodyB,\r\n      { angularLowerLimit: zero, angularUpperLimit: zero },\r\n      disableCollisionsBetweenLinkedBodies\r\n    )\r\n  }\r\n\r\n  private fixed(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n    transform.transformA.setRotation(bodyA.ammo.getWorldTransform().getRotation())\r\n    transform.transformB.setRotation(bodyB.ammo.getWorldTransform().getRotation())\r\n    const constraint = new Ammo.btFixedConstraint(bodyA.ammo, bodyB.ammo, transform.transformA, transform.transformB)\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private pointToPoint(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      pivotA?: XYZ\r\n      pivotB?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { pivotA, pivotB } = config\r\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\r\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\r\n    const constraint = new Ammo.btPoint2PointConstraint(bodyA.ammo, bodyB.ammo, pivotV3, targetPivotV3)\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private hinge(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      pivotA?: XYZ\r\n      pivotB?: XYZ\r\n      axisA?: XYZ\r\n      axisB?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { pivotA, pivotB, axisA, axisB } = config\r\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\r\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\r\n    const axisV3 = new Ammo.btVector3(axisA?.x || 0, axisA?.y || 0, axisA?.z || 0)\r\n    const targetAxisV3 = new Ammo.btVector3(axisB?.x || 0, axisB?.y || 0, axisB?.z || 0)\r\n    const constraint = new Ammo.btHingeConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      pivotV3,\r\n      targetPivotV3,\r\n      axisV3,\r\n      targetAxisV3,\r\n      true\r\n    )\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  // https://pybullet.org/Bullet/phpBB3/viewtopic.php?f=9&t=12690&p=42152&hilit=btSliderConstraint#p42152\r\n  private slider(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      frameA?: XYZ\r\n      frameB?: XYZ\r\n      linearLowerLimit?: number\r\n      linearUpperLimit?: number\r\n      angularLowerLimit?: number\r\n      angularUpperLimit?: number\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n\r\n    const {\r\n      frameA = {},\r\n      frameB = {},\r\n      linearLowerLimit: lll = 0,\r\n      linearUpperLimit: lul = 0,\r\n      angularLowerLimit: all = 0,\r\n      angularUpperLimit: aul = 0\r\n    } = config\r\n\r\n    const rotationA = transform.transformA.getRotation()\r\n    rotationA.setEulerZYX(frameA.x || 0, frameA.y || 0, frameA.z || 0)\r\n    transform.transformA.setRotation(rotationA)\r\n\r\n    const rotationB = transform.transformB.getRotation()\r\n    rotationB.setEulerZYX(frameB.x || 0, frameB.y || 0, frameB.z || 0)\r\n    transform.transformB.setRotation(rotationB)\r\n\r\n    const constraint = new Ammo.btSliderConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    constraint.setLowerLinLimit(lll)\r\n    constraint.setUpperLinLimit(lul)\r\n    constraint.setLowerAngLimit(all)\r\n    constraint.setUpperAngLimit(aul)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private spring(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      stiffness?: number\r\n      damping?: number\r\n      angularLock?: boolean\r\n      linearLowerLimit?: XYZ\r\n      linearUpperLimit?: XYZ\r\n      angularLowerLimit?: XYZ\r\n      angularUpperLimit?: XYZ\r\n      center?: boolean\r\n      offset?: XYZ\r\n      enableSpring?: boolean\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const {\r\n      stiffness = 50,\r\n      damping = 0.01,\r\n      angularLock = false,\r\n      linearLowerLimit: lll = {},\r\n      linearUpperLimit: lul = {},\r\n      angularLowerLimit: all = {},\r\n      angularUpperLimit: aul = {},\r\n      offset = {},\r\n      center = false,\r\n      enableSpring = true\r\n    } = config\r\n\r\n    const off = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\r\n    const constraint = new Ammo.btGeneric6DofSpringConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    this.tmpBtVector3.setValue(lll.x || 0, lll.y || 0, lll.z || 0)\r\n    constraint.setLinearLowerLimit(this.tmpBtVector3)\r\n\r\n    this.tmpBtVector3.setValue(lul.x || 0, lul.y || 0, lul.z || 0)\r\n    constraint.setLinearUpperLimit(this.tmpBtVector3)\r\n\r\n    if (angularLock) {\r\n      this.tmpBtVector3.setValue(0, 0, 0)\r\n      constraint.setAngularLowerLimit(this.tmpBtVector3)\r\n      constraint.setAngularUpperLimit(this.tmpBtVector3)\r\n    } else {\r\n      console.log(all, aul)\r\n      constraint.setAngularLowerLimit(this.toAmmoV3(all, -Math.PI))\r\n      constraint.setAngularUpperLimit(this.toAmmoV3(aul, Math.PI))\r\n    }\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      constraint.enableSpring(i, enableSpring)\r\n      constraint.setStiffness(i, stiffness)\r\n      constraint.setDamping(i, damping)\r\n    }\r\n\r\n    // I have no idea what setEquilibriumPoint does :/\r\n    // constraint.setEquilibriumPoint()\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n\r\n  private coneTwist(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: { frameA: XYZ; frameB: XYZ },\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { frameA, frameB } = config\r\n\r\n    const rbAFrame = new Ammo.btTransform()\r\n    rbAFrame.setIdentity()\r\n    rbAFrame.getOrigin().setValue(frameA?.x || 0, frameA?.y || 0, frameA?.z || 0)\r\n\r\n    const rbBFrame = new Ammo.btTransform()\r\n    rbBFrame.setIdentity()\r\n    rbBFrame.getOrigin().setValue(frameB?.x || 0, frameB?.y || 0, frameB?.z || 0)\r\n\r\n    const t = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n\r\n    const constraint = new Ammo.btConeTwistConstraint(bodyB.ammo, bodyA.ammo, rbAFrame, rbBFrame)\r\n\r\n    // does not work at all :/\r\n    // constraint.setLimit(-Math.PI / 50, Math.PI / 50)\r\n\r\n    constraint.setAngularOnly(true)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n\r\n  private dof(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      linearLowerLimit?: XYZ\r\n      linearUpperLimit?: XYZ\r\n      angularLowerLimit?: XYZ\r\n      angularUpperLimit?: XYZ\r\n      center?: boolean\r\n      offset?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { offset, center = false } = config\r\n    const off = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\r\n\r\n    const constraint = new Ammo.btGeneric6DofConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    const { linearLowerLimit, linearUpperLimit, angularLowerLimit, angularUpperLimit } = config\r\n\r\n    const lll = this.toAmmoV3(linearLowerLimit)\r\n    const lul = this.toAmmoV3(linearUpperLimit)\r\n    const all = this.toAmmoV3(angularLowerLimit, -Math.PI)\r\n    const aul = this.toAmmoV3(angularUpperLimit, Math.PI)\r\n\r\n    constraint.setLinearLowerLimit(lll)\r\n    constraint.setLinearUpperLimit(lul)\r\n    constraint.setAngularLowerLimit(all)\r\n    constraint.setAngularUpperLimit(aul)\r\n\r\n    Ammo.destroy(lll)\r\n    Ammo.destroy(lul)\r\n    Ammo.destroy(all)\r\n    Ammo.destroy(aul)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @description  This is a modified version of the original code from Kevin Lee\r\n * (Includes latest three-to-ammo commit from August 6, 2020)\r\n */\r\n\r\n/**\r\n * @author       Kevin Lee (https://github.com/InfiniteLee)\r\n * @copyright    Copyright (c) 2020 Kevin Lee; Project Url: https://github.com/InfiniteLee/three-to-ammo\r\n * @license      {@link https://github.com/InfiniteLee/three-to-ammo/blob/master/LICENSE|MPL-2.0}\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion, Box3, REVISION } from '@enable3d/three-wrapper/dist/index'\r\n;('use strict')\r\n/* global Ammo */\r\n\r\nexport const TYPE = {\r\n  BOX: 'box',\r\n  CYLINDER: 'cylinder',\r\n  SPHERE: 'sphere',\r\n  CAPSULE: 'capsule',\r\n  CONE: 'cone',\r\n  HULL: 'hull',\r\n  HACD: 'hacd', //Hierarchical Approximate Convex Decomposition\r\n  VHACD: 'vhacd', //Volumetric Hierarchical Approximate Convex Decomposition\r\n  MESH: 'mesh',\r\n  HEIGHTFIELD: 'heightfield'\r\n}\r\n\r\nexport const FIT = {\r\n  ALL: 'all', //A single shape is automatically sized to bound all meshes within the entity.\r\n  MANUAL: 'manual' //A single shape is sized manually. Requires halfExtents or sphereRadius.\r\n}\r\n\r\nexport const HEIGHTFIELD_DATA_TYPE = {\r\n  short: 'short',\r\n  float: 'float'\r\n}\r\n\r\nexport const createCollisionShapes = function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n  switch (options.type) {\r\n    case TYPE.BOX:\r\n      return [createBoxShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CYLINDER:\r\n      return [createCylinderShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CAPSULE:\r\n      return [createCapsuleShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CONE:\r\n      return [createConeShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.SPHERE:\r\n      return [createSphereShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.HULL:\r\n      return [createHullShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.HACD:\r\n      return createHACDShapes(vertices, matrices, indexes, matrixWorld, options)\r\n    case TYPE.VHACD:\r\n      return createVHACDShapes(vertices, matrices, indexes, matrixWorld, options)\r\n    case TYPE.MESH:\r\n      return [createTriMeshShape(vertices, matrices, indexes, matrixWorld, options)]\r\n    case TYPE.HEIGHTFIELD:\r\n      return [createHeightfieldTerrainShape(options)]\r\n    default:\r\n      console.warn(options.type + ' is not currently supported')\r\n      return []\r\n  }\r\n}\r\n\r\n//TODO: support gimpact (dynamic trimesh) and heightmap\r\n\r\nexport const createBoxShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.BOX\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\r\n  const collisionShape = new Ammo.btBoxShape(btHalfExtents)\r\n  Ammo.destroy(btHalfExtents)\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createCylinderShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CYLINDER\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btCylinderShape(btHalfExtents)\r\n      case 'x':\r\n        return new Ammo.btCylinderShapeX(btHalfExtents)\r\n      case 'z':\r\n        return new Ammo.btCylinderShapeZ(btHalfExtents)\r\n    }\r\n    return null\r\n  })()\r\n  Ammo.destroy(btHalfExtents)\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createCapsuleShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CAPSULE\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const { x, y, z } = options.halfExtents\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btCapsuleShape(Math.max(x, z), y * 2)\r\n      case 'x':\r\n        return new Ammo.btCapsuleShapeX(Math.max(y, z), x * 2)\r\n      case 'z':\r\n        return new Ammo.btCapsuleShapeZ(Math.max(x, y), z * 2)\r\n    }\r\n    return null\r\n  })()\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createConeShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CONE\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const { x, y, z } = options.halfExtents\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btConeShape(Math.max(x, z), y * 2)\r\n      case 'x':\r\n        return new Ammo.btConeShapeX(Math.max(y, z), x * 2)\r\n      case 'z':\r\n        return new Ammo.btConeShapeZ(Math.max(x, y), z * 2)\r\n    }\r\n    return null\r\n  })()\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createSphereShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.SPHERE\r\n  _setOptions(options)\r\n\r\n  let radius\r\n  if (options.fit === FIT.MANUAL && !isNaN(options.sphereRadius)) {\r\n    radius = options.sphereRadius\r\n  } else {\r\n    radius = _computeRadius(vertices, matrices, _computeBounds(vertices, matrices))\r\n  }\r\n\r\n  const collisionShape = new Ammo.btSphereShape(radius)\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n\r\n  return collisionShape\r\n}\r\n\r\nexport const createHullShape = (function () {\r\n  const vertex = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, matrixWorld, options = {}) {\r\n    options.type = TYPE.HULL\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: hull')\r\n      return null\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n\r\n    const btVertex = new Ammo.btVector3()\r\n    const originalHull = new Ammo.btConvexHullShape()\r\n    originalHull.setMargin(options.margin)\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    let vertexCount = 0\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n    }\r\n\r\n    const maxVertices = options.hullMaxVertices || 100000\r\n    // todo: might want to implement this in a deterministic way that doesn't do O(verts) calls to Math.random\r\n    if (vertexCount > maxVertices) {\r\n      console.warn(`too many vertices for hull shape; sampling ~${maxVertices} from ~${vertexCount} vertices`)\r\n    }\r\n    const p = Math.min(1, maxVertices / vertexCount)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        const isLastVertex = i === vertices.length - 1 && j === components.length - 3\r\n        if (Math.random() <= p || isLastVertex) {\r\n          // always include the last vertex\r\n          vertex\r\n            .set(components[j], components[j + 1], components[j + 2])\r\n            .applyMatrix4(matrix)\r\n            .sub(center)\r\n          btVertex.setValue(vertex.x, vertex.y, vertex.z)\r\n          originalHull.addPoint(btVertex, isLastVertex) // recalc AABB only on last geometry\r\n        }\r\n      }\r\n    }\r\n\r\n    let collisionShape = originalHull\r\n    if (originalHull.getNumVertices() >= 100) {\r\n      //Bullet documentation says don't use convexHulls with 100 verts or more\r\n      const shapeHull = new Ammo.btShapeHull(originalHull)\r\n      shapeHull.buildHull(options.margin)\r\n      Ammo.destroy(originalHull)\r\n      collisionShape = new Ammo.btConvexHullShape(\r\n        Ammo.getPointer(shapeHull.getVertexPointer()),\r\n        shapeHull.numVertices()\r\n      )\r\n      Ammo.destroy(shapeHull) // btConvexHullShape makes a copy\r\n    }\r\n\r\n    Ammo.destroy(btVertex)\r\n\r\n    _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n    return collisionShape\r\n  }\r\n})()\r\n\r\nexport const createHACDShapes = (function () {\r\n  const vector = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.HACD\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: hacd')\r\n      return []\r\n    }\r\n\r\n    if (!Ammo.hasOwnProperty('HACD')) {\r\n      console.warn(\r\n        'HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\r\n      )\r\n      return []\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    let vertexCount = 0\r\n    let triCount = 0\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n      if (indexes && indexes[i]) {\r\n        triCount += indexes[i].length / 3\r\n      } else {\r\n        triCount += vertices[i].length / 9\r\n      }\r\n    }\r\n\r\n    const hacd = new Ammo.HACD()\r\n    if (options.hasOwnProperty('compacityWeight')) hacd.SetCompacityWeight(options.compacityWeight)\r\n    if (options.hasOwnProperty('volumeWeight')) hacd.SetVolumeWeight(options.volumeWeight)\r\n    if (options.hasOwnProperty('nClusters')) hacd.SetNClusters(options.nClusters)\r\n    if (options.hasOwnProperty('nVerticesPerCH')) hacd.SetNVerticesPerCH(options.nVerticesPerCH)\r\n    if (options.hasOwnProperty('concavity')) hacd.SetConcavity(options.concavity)\r\n\r\n    const points = Ammo._malloc(vertexCount * 3 * 8)\r\n    const triangles = Ammo._malloc(triCount * 3 * 4)\r\n    hacd.SetPoints(points)\r\n    hacd.SetTriangles(triangles)\r\n    hacd.SetNPoints(vertexCount)\r\n    hacd.SetNTriangles(triCount)\r\n\r\n    let pptr = points / 8,\r\n      tptr = triangles / 4\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        vector\r\n          .set(components[j + 0], components[j + 1], components[j + 2])\r\n          .applyMatrix4(matrix)\r\n          .sub(center)\r\n        Ammo.HEAPF64[pptr + 0] = vector.x\r\n        Ammo.HEAPF64[pptr + 1] = vector.y\r\n        Ammo.HEAPF64[pptr + 2] = vector.z\r\n        pptr += 3\r\n      }\r\n      if (indexes[i]) {\r\n        const indices = indexes[i]\r\n        for (let j = 0; j < indices.length; j++) {\r\n          Ammo.HEAP32[tptr] = indices[j]\r\n          tptr++\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length / 3; j++) {\r\n          Ammo.HEAP32[tptr] = j\r\n          tptr++\r\n        }\r\n      }\r\n    }\r\n\r\n    hacd.Compute()\r\n    Ammo._free(points)\r\n    Ammo._free(triangles)\r\n    const nClusters = hacd.GetNClusters()\r\n\r\n    const shapes = []\r\n    for (let i = 0; i < nClusters; i++) {\r\n      const hull = new Ammo.btConvexHullShape()\r\n      hull.setMargin(options.margin)\r\n      const nPoints = hacd.GetNPointsCH(i)\r\n      const nTriangles = hacd.GetNTrianglesCH(i)\r\n      const hullPoints = Ammo._malloc(nPoints * 3 * 8)\r\n      const hullTriangles = Ammo._malloc(nTriangles * 3 * 4)\r\n      hacd.GetCH(i, hullPoints, hullTriangles)\r\n\r\n      const pptr = hullPoints / 8\r\n      for (let pi = 0; pi < nPoints; pi++) {\r\n        const btVertex = new Ammo.btVector3()\r\n        const px = Ammo.HEAPF64[pptr + pi * 3 + 0]\r\n        const py = Ammo.HEAPF64[pptr + pi * 3 + 1]\r\n        const pz = Ammo.HEAPF64[pptr + pi * 3 + 2]\r\n        btVertex.setValue(px, py, pz)\r\n        hull.addPoint(btVertex, pi === nPoints - 1)\r\n        Ammo.destroy(btVertex)\r\n      }\r\n\r\n      _finishCollisionShape(hull, options, scale)\r\n      shapes.push(hull)\r\n    }\r\n\r\n    return shapes\r\n  }\r\n})()\r\n\r\nexport const createVHACDShapes = (function () {\r\n  const vector = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.VHACD\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: vhacd')\r\n      return []\r\n    }\r\n\r\n    if (!Ammo.hasOwnProperty('VHACD')) {\r\n      console.warn(\r\n        'VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\r\n      )\r\n      return []\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    let vertexCount = 0\r\n    let triCount = 0\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n      if (indexes && indexes[i]) {\r\n        triCount += indexes[i].length / 3\r\n      } else {\r\n        triCount += vertices[i].length / 9\r\n      }\r\n    }\r\n\r\n    const vhacd = new Ammo.VHACD()\r\n    const params = new Ammo.Parameters()\r\n    //https://kmamou.blogspot.com/2014/12/v-hacd-20-parameters-description.html\r\n    if (options.hasOwnProperty('resolution')) params.set_m_resolution(options.resolution)\r\n    if (options.hasOwnProperty('depth')) params.set_m_depth(options.depth)\r\n    if (options.hasOwnProperty('concavity')) params.set_m_concavity(options.concavity)\r\n    if (options.hasOwnProperty('planeDownsampling')) params.set_m_planeDownsampling(options.planeDownsampling)\r\n    if (options.hasOwnProperty('convexhullDownsampling'))\r\n      params.set_m_convexhullDownsampling(options.convexhullDownsampling)\r\n    if (options.hasOwnProperty('alpha')) params.set_m_alpha(options.alpha)\r\n    if (options.hasOwnProperty('beta')) params.set_m_beta(options.beta)\r\n    if (options.hasOwnProperty('gamma')) params.set_m_gamma(options.gamma)\r\n    if (options.hasOwnProperty('pca')) params.set_m_pca(options.pca)\r\n    if (options.hasOwnProperty('mode')) params.set_m_mode(options.mode)\r\n    if (options.hasOwnProperty('maxNumVerticesPerCH')) params.set_m_maxNumVerticesPerCH(options.maxNumVerticesPerCH)\r\n    if (options.hasOwnProperty('minVolumePerCH')) params.set_m_minVolumePerCH(options.minVolumePerCH)\r\n    if (options.hasOwnProperty('convexhullApproximation'))\r\n      params.set_m_convexhullApproximation(options.convexhullApproximation)\r\n    if (options.hasOwnProperty('oclAcceleration')) params.set_m_oclAcceleration(options.oclAcceleration)\r\n\r\n    const points = Ammo._malloc(vertexCount * 3 * 8 + 3)\r\n    const triangles = Ammo._malloc(triCount * 3 * 4)\r\n\r\n    let pptr = points / 8,\r\n      tptr = triangles / 4\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        vector\r\n          .set(components[j + 0], components[j + 1], components[j + 2])\r\n          .applyMatrix4(matrix)\r\n          .sub(center)\r\n        Ammo.HEAPF64[pptr + 0] = vector.x\r\n        Ammo.HEAPF64[pptr + 1] = vector.y\r\n        Ammo.HEAPF64[pptr + 2] = vector.z\r\n        pptr += 3\r\n      }\r\n      if (indexes[i]) {\r\n        const indices = indexes[i]\r\n        for (let j = 0; j < indices.length; j++) {\r\n          Ammo.HEAP32[tptr] = indices[j]\r\n          tptr++\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length / 3; j++) {\r\n          Ammo.HEAP32[tptr] = j\r\n          tptr++\r\n        }\r\n      }\r\n    }\r\n    vhacd.Compute(points, 3, vertexCount, triangles, 3, triCount, params)\r\n    Ammo._free(points)\r\n    Ammo._free(triangles)\r\n    const nHulls = vhacd.GetNConvexHulls()\r\n\r\n    const shapes = []\r\n    const ch = new Ammo.ConvexHull()\r\n    for (let i = 0; i < nHulls; i++) {\r\n      vhacd.GetConvexHull(i, ch)\r\n      const nPoints = ch.get_m_nPoints()\r\n      const hullPoints = ch.get_m_points()\r\n\r\n      const hull = new Ammo.btConvexHullShape()\r\n      hull.setMargin(options.margin)\r\n\r\n      for (let pi = 0; pi < nPoints; pi++) {\r\n        const btVertex = new Ammo.btVector3()\r\n        const px = ch.get_m_points(pi * 3 + 0)\r\n        const py = ch.get_m_points(pi * 3 + 1)\r\n        const pz = ch.get_m_points(pi * 3 + 2)\r\n        btVertex.setValue(px, py, pz)\r\n        hull.addPoint(btVertex, pi === nPoints - 1)\r\n        Ammo.destroy(btVertex)\r\n      }\r\n\r\n      _finishCollisionShape(hull, options, scale)\r\n      shapes.push(hull)\r\n    }\r\n    Ammo.destroy(ch)\r\n    Ammo.destroy(vhacd)\r\n\r\n    return shapes\r\n  }\r\n})()\r\n\r\nexport const createTriMeshShape = (function () {\r\n  const va = new Vector3()\r\n  const vb = new Vector3()\r\n  const vc = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.MESH\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: mesh')\r\n      return null\r\n    }\r\n\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    const bta = new Ammo.btVector3()\r\n    const btb = new Ammo.btVector3()\r\n    const btc = new Ammo.btVector3()\r\n    const triMesh = new Ammo.btTriangleMesh(true, false)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      const index = indexes[i] ? indexes[i] : null\r\n      matrix.fromArray(matrices[i])\r\n      if (index) {\r\n        for (let j = 0; j < index.length; j += 3) {\r\n          const ai = index[j] * 3\r\n          const bi = index[j + 1] * 3\r\n          const ci = index[j + 2] * 3\r\n          va.set(components[ai], components[ai + 1], components[ai + 2]).applyMatrix4(matrix)\r\n          vb.set(components[bi], components[bi + 1], components[bi + 2]).applyMatrix4(matrix)\r\n          vc.set(components[ci], components[ci + 1], components[ci + 2]).applyMatrix4(matrix)\r\n          bta.setValue(va.x, va.y, va.z)\r\n          btb.setValue(vb.x, vb.y, vb.z)\r\n          btc.setValue(vc.x, vc.y, vc.z)\r\n          triMesh.addTriangle(bta, btb, btc, false)\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length; j += 9) {\r\n          va.set(components[j + 0], components[j + 1], components[j + 2]).applyMatrix4(matrix)\r\n          vb.set(components[j + 3], components[j + 4], components[j + 5]).applyMatrix4(matrix)\r\n          vc.set(components[j + 6], components[j + 7], components[j + 8]).applyMatrix4(matrix)\r\n          bta.setValue(va.x, va.y, va.z)\r\n          btb.setValue(vb.x, vb.y, vb.z)\r\n          btc.setValue(vc.x, vc.y, vc.z)\r\n          triMesh.addTriangle(bta, btb, btc, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    triMesh.setScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n\r\n    // MOD (yandeu): Use btConvexTriangleMeshShape for concave shapes\r\n    let collisionShape\r\n    if (options.concave) collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\r\n    else collisionShape = new Ammo.btConvexTriangleMeshShape(triMesh, true)\r\n\r\n    // const collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\r\n\r\n    collisionShape.resources = [triMesh]\r\n\r\n    Ammo.destroy(bta)\r\n    Ammo.destroy(btb)\r\n    Ammo.destroy(btc)\r\n\r\n    _finishCollisionShape(collisionShape, options)\r\n    return collisionShape\r\n  }\r\n})()\r\n\r\nexport const createHeightfieldTerrainShape = function (options = {}) {\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    console.warn('cannot use fit: all with type: heightfield')\r\n    return null\r\n  }\r\n  const heightfieldDistance = options.heightfieldDistance || 1\r\n  const heightfieldData = options.heightfieldData || []\r\n  const heightScale = options.heightScale || 0\r\n  const upAxis = options.hasOwnProperty('upAxis') ? options.upAxis : 1 // x = 0; y = 1; z = 2\r\n  const hdt = (() => {\r\n    switch (options.heightDataType) {\r\n      case 'short':\r\n        return Ammo.PHY_SHORT\r\n      case 'float':\r\n        return Ammo.PHY_FLOAT\r\n      default:\r\n        return Ammo.PHY_FLOAT\r\n    }\r\n  })()\r\n  const flipQuadEdges = options.hasOwnProperty('flipQuadEdges') ? options.flipQuadEdges : true\r\n\r\n  const heightStickLength = heightfieldData.length\r\n  const heightStickWidth = heightStickLength > 0 ? heightfieldData[0].length : 0\r\n\r\n  const data = Ammo._malloc(heightStickLength * heightStickWidth * 4)\r\n  const ptr = data / 4\r\n\r\n  let minHeight = Number.POSITIVE_INFINITY\r\n  let maxHeight = Number.NEGATIVE_INFINITY\r\n  let index = 0\r\n  for (let l = 0; l < heightStickLength; l++) {\r\n    for (let w = 0; w < heightStickWidth; w++) {\r\n      const height = heightfieldData[l][w]\r\n      Ammo.HEAPF32[ptr + index] = height\r\n      index++\r\n      minHeight = Math.min(minHeight, height)\r\n      maxHeight = Math.max(maxHeight, height)\r\n    }\r\n  }\r\n\r\n  const collisionShape = new Ammo.btHeightfieldTerrainShape(\r\n    heightStickWidth,\r\n    heightStickLength,\r\n    data,\r\n    heightScale,\r\n    minHeight,\r\n    maxHeight,\r\n    upAxis,\r\n    hdt,\r\n    flipQuadEdges\r\n  )\r\n\r\n  const scale = new Ammo.btVector3(heightfieldDistance, 1, heightfieldDistance)\r\n  collisionShape.setLocalScaling(scale)\r\n  Ammo.destroy(scale)\r\n\r\n  collisionShape.heightfieldData = data\r\n\r\n  _finishCollisionShape(collisionShape, options)\r\n  return collisionShape\r\n}\r\n\r\nfunction _setOptions(options) {\r\n  // MOD (yandeu): All of this will be done in physics.ts\r\n  // we only keep type and margin\r\n  options.type = options.type || TYPE.HULL\r\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\r\n  return\r\n\r\n  options.fit = options.hasOwnProperty('fit') ? options.fit : FIT.ALL\r\n  options.type = options.type || TYPE.HULL\r\n  options.minHalfExtent = options.hasOwnProperty('minHalfExtent') ? options.minHalfExtent : 0\r\n  options.maxHalfExtent = options.hasOwnProperty('maxHalfExtent') ? options.maxHalfExtent : Number.POSITIVE_INFINITY\r\n  options.cylinderAxis = options.cylinderAxis || 'y'\r\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\r\n  options.includeInvisible = options.hasOwnProperty('includeInvisible') ? options.includeInvisible : false\r\n\r\n  if (!options.offset) {\r\n    options.offset = new Vector3()\r\n  }\r\n\r\n  if (!options.orientation) {\r\n    options.orientation = new Quaternion()\r\n  }\r\n}\r\n\r\nconst _finishCollisionShape = function (collisionShape, options, scale) {\r\n  // MOD (yandeu): All of this will be done in physics.ts\r\n  return\r\n\r\n  collisionShape.type = options.type\r\n  collisionShape.setMargin(options.margin)\r\n  collisionShape.destroy = () => {\r\n    for (let res of collisionShape.resources || []) {\r\n      Ammo.destroy(res)\r\n    }\r\n    if (collisionShape.heightfieldData) {\r\n      Ammo._free(collisionShape.heightfieldData)\r\n    }\r\n    Ammo.destroy(collisionShape)\r\n  }\r\n\r\n  const localTransform = new Ammo.btTransform()\r\n  const rotation = new Ammo.btQuaternion()\r\n  localTransform.setIdentity()\r\n\r\n  localTransform.getOrigin().setValue(options.offset.x, options.offset.y, options.offset.z)\r\n  rotation.setValue(options.orientation.x, options.orientation.y, options.orientation.z, options.orientation.w)\r\n\r\n  localTransform.setRotation(rotation)\r\n  Ammo.destroy(rotation)\r\n\r\n  if (scale) {\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    collisionShape.setLocalScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n  }\r\n\r\n  collisionShape.localTransform = localTransform\r\n}\r\n\r\nexport const iterateGeometries = (function () {\r\n  const inverse = new Matrix4()\r\n  return function (root, options, cb) {\r\n    // MOD (yandeu): Update to three.js r123\r\n    // compatibility fix for three.js >= r123 (Dezember 2020)\r\n    if (+REVISION >= 123) inverse.copy(root.matrixWorld).invert()\r\n    else inverse.getInverse(root.matrixWorld)\r\n\r\n    const scale = new Vector3()\r\n    scale.setFromMatrixScale(root.matrixWorld)\r\n    root.traverse(mesh => {\r\n      const transform = new Matrix4()\r\n      if (\r\n        mesh.isMesh &&\r\n        // MOD (yandeu): No need to check if name is 'Sky'\r\n        // mesh.name !== 'Sky' &&\r\n        (options.includeInvisible || (mesh.el && mesh.el.object3D.visible) || mesh.visible)\r\n      ) {\r\n        if (mesh === root) {\r\n          transform.identity()\r\n        } else {\r\n          mesh.updateWorldMatrix(true)\r\n          transform.multiplyMatrices(inverse, mesh.matrixWorld)\r\n        }\r\n        // todo: might want to return null xform if this is the root so that callers can avoid multiplying\r\n        // things by the identity matrix\r\n        cb(\r\n          mesh.geometry.isBufferGeometry ? mesh.geometry.attributes.position.array : mesh.geometry.vertices,\r\n          transform.elements,\r\n          mesh.geometry.index ? mesh.geometry.index.array : null\r\n        )\r\n      }\r\n    })\r\n  }\r\n})()\r\n\r\nconst _computeScale = (function () {\r\n  const matrix = new Matrix4()\r\n  return function (matrixWorld, options = {}) {\r\n    const scale = new Vector3(1, 1, 1)\r\n    if (options.fit === FIT.ALL) {\r\n      matrix.fromArray(matrixWorld)\r\n      scale.setFromMatrixScale(matrix)\r\n    }\r\n    return scale\r\n  }\r\n})()\r\n\r\nconst _computeRadius = (function () {\r\n  const center = new Vector3()\r\n  return function (vertices, matrices, bounds) {\r\n    let maxRadiusSq = 0\r\n    let { x: cx, y: cy, z: cz } = bounds.getCenter(center)\r\n\r\n    _iterateVertices(vertices, matrices, v => {\r\n      const dx = cx - v.x\r\n      const dy = cy - v.y\r\n      const dz = cz - v.z\r\n      maxRadiusSq = Math.max(maxRadiusSq, dx * dx + dy * dy + dz * dz)\r\n    })\r\n    return Math.sqrt(maxRadiusSq)\r\n  }\r\n})()\r\n\r\nconst _computeHalfExtents = function (bounds, minHalfExtent, maxHalfExtent) {\r\n  const halfExtents = new Vector3()\r\n  return halfExtents.subVectors(bounds.max, bounds.min).multiplyScalar(0.5).clampScalar(minHalfExtent, maxHalfExtent)\r\n}\r\n\r\nconst _computeLocalOffset = function (matrix, bounds, target) {\r\n  target.addVectors(bounds.max, bounds.min).multiplyScalar(0.5).applyMatrix4(matrix)\r\n  return target\r\n}\r\n\r\n// returns the bounding box for the geometries underneath `root`.\r\nconst _computeBounds = function (vertices, matrices) {\r\n  const bounds = new Box3()\r\n  let minX = +Infinity\r\n  let minY = +Infinity\r\n  let minZ = +Infinity\r\n  let maxX = -Infinity\r\n  let maxY = -Infinity\r\n  let maxZ = -Infinity\r\n  bounds.min.set(0, 0, 0)\r\n  bounds.max.set(0, 0, 0)\r\n\r\n  _iterateVertices(vertices, matrices, v => {\r\n    if (v.x < minX) minX = v.x\r\n    if (v.y < minY) minY = v.y\r\n    if (v.z < minZ) minZ = v.z\r\n    if (v.x > maxX) maxX = v.x\r\n    if (v.y > maxY) maxY = v.y\r\n    if (v.z > maxZ) maxZ = v.z\r\n  })\r\n\r\n  bounds.min.set(minX, minY, minZ)\r\n  bounds.max.set(maxX, maxY, maxZ)\r\n  return bounds\r\n}\r\n\r\nconst _iterateVertices = (function () {\r\n  const vertex = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, cb) {\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < vertices[i].length; j += 3) {\r\n        vertex.set(vertices[i][j], vertices[i][j + 1], vertices[i][j + 2]).applyMatrix4(matrix)\r\n        cb(vertex)\r\n      }\r\n    }\r\n  }\r\n})()\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { EventEmitter } from 'eventemitter3'\r\nimport { ExtendedObject3D, CollisionEvent } from '@enable3d/common/dist/types'\r\nimport { Types } from './physics'\r\n\r\nexport class CollisionEvents extends EventEmitter {\r\n  public worldTransform: Ammo.btTransform\r\n  public physicsWorld: Ammo.btDiscreteDynamicsWorld\r\n\r\n  public addCollider(\r\n    object1: ExtendedObject3D,\r\n    object2: ExtendedObject3D,\r\n    eventCallback: (event: CollisionEvent) => void\r\n  ) {\r\n    if (!object1.body || !object2.body) return\r\n\r\n    object1.body.checkCollisions = true\r\n    object2.body.checkCollisions = true\r\n\r\n    this.on('collision', (data: { bodies: ExtendedObject3D[]; event: CollisionEvent }) => {\r\n      const { bodies, event } = data\r\n      if (bodies[0]?.name && bodies[1]?.name && object1?.name && object2?.name) {\r\n        if (bodies[0].name === object1.name && bodies[1].name === object2.name) eventCallback(event)\r\n        else if (bodies[1].name === object1.name && bodies[0].name === object2.name) eventCallback(event)\r\n      }\r\n    })\r\n  }\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @description  This is a modified version of the original code from Kevin Lee\r\n */\r\n\r\n/**\r\n * @author       Kevin Lee (https://github.com/InfiniteLee)\r\n * @copyright    Copyright (c) 2019 Kevin Lee; Project Url: https://github.com/InfiniteLee/ammo-debug-drawer\r\n * @license      {@link https://github.com/InfiniteLee/ammo-debug-drawer/blob/master/LICENSE|MPL-2.0}\r\n */\r\n\r\nimport {\r\n  Scene,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  LineBasicMaterial,\r\n  LineSegments,\r\n  StaticDrawUsage\r\n} from '@enable3d/three-wrapper/dist/index'\r\n\r\nconst AmmoDebugConstants = {\r\n  NoDebug: 0,\r\n  DrawWireframe: 1,\r\n  DrawAabb: 2,\r\n  DrawFeaturesText: 4,\r\n  DrawContactPoints: 8,\r\n  NoDeactivation: 16,\r\n  NoHelpText: 32,\r\n  DrawText: 64,\r\n  ProfileTimings: 128,\r\n  EnableSatComparison: 256,\r\n  DisableBulletLCP: 512,\r\n  EnableCCD: 1024,\r\n  DrawConstraints: 1 << 11, //2048\r\n  DrawConstraintLimits: 1 << 12, //4096\r\n  FastWireframe: 1 << 13, //8192\r\n  DrawNormals: 1 << 14, //16384\r\n  DrawOnTop: 1 << 15, //32768\r\n  MAX_DEBUG_DRAW_MODE: 0xffffffff\r\n}\r\n\r\n/**\r\n * An implementation of the btIDebugDraw interface in Ammo.js, for debug rendering of Ammo shapes\r\n */\r\nclass DebugDrawer {\r\n  debugDrawMode: number\r\n  geometry: BufferGeometry\r\n  index: number\r\n  mesh: LineSegments\r\n  enabled: boolean\r\n  debugDrawer: Ammo.DebugDrawer\r\n  warnedOnce: boolean\r\n  constructor(public scene: Scene, public world: Ammo.btCollisionWorld, public options: any = {}) {\r\n    this.debugDrawMode = options.debugDrawMode || AmmoDebugConstants.DrawWireframe\r\n    const drawOnTop = this.debugDrawMode & AmmoDebugConstants.DrawOnTop || false\r\n    const maxBufferSize = options.maxBufferSize || 1000000\r\n\r\n    this.geometry = new BufferGeometry()\r\n    const vertices = new Float32Array(maxBufferSize * 3)\r\n    const colors = new Float32Array(maxBufferSize * 3)\r\n\r\n    /*\r\n    I do not know the difference, just using the first one.\r\n    export const StaticDrawUsage: Usage;\r\n    export const DynamicDrawUsage: Usage;\r\n    export const StreamDrawUsage: Usage;\r\n    export const StaticReadUsage: Usage;\r\n    export const DynamicReadUsage: Usage;\r\n    export const StreamReadUsage: Usage;\r\n    export const StaticCopyUsage: Usage;\r\n    export const DynamicCopyUsage: Usage;\r\n    export const StreamCopyUsage: Usage;\r\n     */\r\n    this.geometry.setAttribute('position', new BufferAttribute(vertices, 3).setUsage(StaticDrawUsage))\r\n    this.geometry.setAttribute('color', new BufferAttribute(colors, 3).setUsage(StaticDrawUsage))\r\n\r\n    this.index = 0\r\n\r\n    const material = new LineBasicMaterial({\r\n      vertexColors: true,\r\n      depthTest: !drawOnTop\r\n    })\r\n\r\n    this.mesh = new LineSegments(this.geometry, material)\r\n    if (drawOnTop) this.mesh.renderOrder = 999\r\n    this.mesh.frustumCulled = false\r\n\r\n    this.enabled = false\r\n\r\n    this.debugDrawer = new Ammo.DebugDrawer()\r\n    this.debugDrawer.drawLine = this.drawLine.bind(this)\r\n    this.debugDrawer.drawContactPoint = this.drawContactPoint.bind(this)\r\n    this.debugDrawer.reportErrorWarning = this.reportErrorWarning.bind(this)\r\n    this.debugDrawer.draw3dText = this.draw3dText.bind(this)\r\n    this.debugDrawer.setDebugMode = this.setDebugMode.bind(this)\r\n    this.debugDrawer.getDebugMode = this.getDebugMode.bind(this)\r\n\r\n    this.world.setDebugDrawer(this.debugDrawer)\r\n  }\r\n\r\n  enable() {\r\n    this.enabled = true\r\n    this.scene.add(this.mesh)\r\n  }\r\n\r\n  disable() {\r\n    this.enabled = false\r\n    this.scene.remove(this.mesh)\r\n  }\r\n\r\n  update() {\r\n    if (!this.enabled) {\r\n      return\r\n    }\r\n\r\n    if (this.index != 0) {\r\n      // @ts-ignore\r\n      this.geometry.attributes.position.needsUpdate = true\r\n      // @ts-ignore\r\n      this.geometry.attributes.color.needsUpdate = true\r\n    }\r\n\r\n    this.index = 0\r\n    this.world.debugDrawWorld()\r\n    this.geometry.setDrawRange(0, this.index)\r\n  }\r\n\r\n  drawLine(from: any, to: any, color: any) {\r\n    // @ts-ignore\r\n    const heap = Ammo.HEAPF32\r\n    const r = heap[(color + 0) / 4]\r\n    const g = heap[(color + 4) / 4]\r\n    const b = heap[(color + 8) / 4]\r\n\r\n    const fromX = heap[(from + 0) / 4]\r\n    const fromY = heap[(from + 4) / 4]\r\n    const fromZ = heap[(from + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, fromX, fromY, fromZ)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n\r\n    const toX = heap[(to + 0) / 4]\r\n    const toY = heap[(to + 4) / 4]\r\n    const toZ = heap[(to + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, toX, toY, toZ)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n  }\r\n\r\n  //TODO: figure out how to make lifeTime work\r\n  drawContactPoint(pointOnB: any, normalOnB: any, distance: any, _lifeTime: any, color: any) {\r\n    // @ts-ignore\r\n    const heap = Ammo.HEAPF32\r\n    const r = heap[(color + 0) / 4]\r\n    const g = heap[(color + 4) / 4]\r\n    const b = heap[(color + 8) / 4]\r\n\r\n    const x = heap[(pointOnB + 0) / 4]\r\n    const y = heap[(pointOnB + 4) / 4]\r\n    const z = heap[(pointOnB + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, x, y, z)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n\r\n    const dx = heap[(normalOnB + 0) / 4] * distance\r\n    const dy = heap[(normalOnB + 4) / 4] * distance\r\n    const dz = heap[(normalOnB + 8) / 4] * distance\r\n    this.geometry.attributes.position.setXYZ(this.index, x + dx, y + dy, z + dz)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n  }\r\n\r\n  reportErrorWarning(warningString: string) {\r\n    if (Ammo.hasOwnProperty('Pointer_stringify')) {\r\n      // @ts-ignore\r\n      console.warn(Ammo.Pointer_stringify(warningString))\r\n    } else if (!this.warnedOnce) {\r\n      this.warnedOnce = true\r\n      console.warn(\"Cannot print warningString, please rebuild Ammo.js using 'debug' flag\")\r\n    }\r\n  }\r\n\r\n  draw3dText(_location: any, _textString: any) {\r\n    //TODO\r\n    console.warn('TODO: draw3dText')\r\n  }\r\n\r\n  setDebugMode(debugMode: any) {\r\n    this.debugDrawMode = debugMode\r\n  }\r\n\r\n  getDebugMode() {\r\n    return this.debugDrawMode\r\n  }\r\n}\r\n\r\nexport default DebugDrawer\r\n","/**\r\n * Copied from three.js examples and added a fix\r\n */\r\n\r\n/**\r\n * @author yomboprime https://github.com/yomboprime\r\n *\r\n * @fileoverview This class can be used to subdivide a convex Geometry object into pieces.\r\n *\r\n * Usage:\r\n *\r\n * Use the function prepareBreakableObject to prepare a Mesh object to be broken.\r\n *\r\n * Then, call the various functions to subdivide the object (subdivideByImpact, cutByPlane)\r\n *\r\n * Sub-objects that are product of subdivision don't need prepareBreakableObject to be called on them.\r\n *\r\n * Requisites for the object:\r\n *\r\n *  - Mesh object must have a BufferGeometry (not Geometry) and a Material\r\n *\r\n *  - Vertex normals must be planar (not smoothed)\r\n *\r\n *  - The geometry must be convex (this is not checked in the library). You can create convex\r\n *  geometries with ConvexBufferGeometry. The BoxBufferGeometry, SphereBufferGeometry and other convex primitives\r\n *  can also be used.\r\n *\r\n * Note: This lib adds member variables to object's userData member (see prepareBreakableObject function)\r\n * Use with caution and read the code when using with other libs.\r\n *\r\n * @param {double} minSizeForBreak Min size a debris can have to break.\r\n * @param {double} smallDelta Max distance to consider that a point belongs to a plane.\r\n *\r\n */\r\n\r\nimport { Line3, Mesh, Plane, Vector3 } from '@enable3d/three-wrapper/dist/index'\r\nimport { ConvexBufferGeometry } from '@enable3d/three-wrapper/dist/index'\r\nimport logger from '@enable3d/common/dist/logger'\r\n\r\nconst ConvexObjectBreaker = function (minSizeForBreak?: number, smallDelta?: number) {\r\n  // @ts-ignore\r\n  this.minSizeForBreak = minSizeForBreak || 1.4\r\n  // @ts-ignore\r\n  this.smallDelta = smallDelta || 0.0001\r\n\r\n  // @ts-ignore\r\n  this.tempLine1 = new Line3()\r\n  // @ts-ignore\r\n  this.tempPlane1 = new Plane()\r\n  // @ts-ignore\r\n  this.tempPlane2 = new Plane()\r\n  // @ts-ignore\r\n  this.tempPlane_Cut = new Plane()\r\n  // @ts-ignore\r\n  this.tempCM1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempCM2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_3 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P0 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_N0 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_N1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_AB = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_CB = new Vector3()\r\n  // @ts-ignore\r\n  this.tempResultObjects = { object1: null, object2: null }\r\n\r\n  // @ts-ignore\r\n  this.segments = []\r\n  var n = 30 * 30\r\n  // @ts-ignore\r\n  for (var i = 0; i < n; i++) this.segments[i] = false\r\n}\r\n\r\nConvexObjectBreaker.prototype = {\r\n  constructor: ConvexObjectBreaker,\r\n\r\n  prepareBreakableObject: function (object: any, mass: any, velocity: any, angularVelocity: any, breakable: any) {\r\n    // object is a Object3d (normally a Mesh), must have a BufferGeometry, and it must be convex.\r\n    // Its material property is propagated to its children (sub-pieces)\r\n    // mass must be > 0\r\n\r\n    if (!object.geometry.isBufferGeometry) {\r\n      console.error('THREE.ConvexObjectBreaker.prepareBreakableObject(): Parameter object must have a BufferGeometry.')\r\n    }\r\n\r\n    object.userData.ammoPhysicsData = {} // initialise our new data container - would be best to move this to ExtendedObject and not rely on userData at all for best compatibility\r\n    var ammoPhysicsData = object.userData.ammoPhysicsData // get reference to it\r\n    ammoPhysicsData.mass = mass\r\n    ammoPhysicsData.velocity = velocity.clone()\r\n    ammoPhysicsData.angularVelocity = angularVelocity.clone()\r\n    ammoPhysicsData.breakable = breakable\r\n  },\r\n\r\n  /*\r\n   * @param {int} maxRadialIterations Iterations for radial cuts.\r\n   * @param {int} maxRandomIterations Max random iterations for not-radial cuts\r\n   *\r\n   * Returns the array of pieces\r\n   */\r\n  subdivideByImpact: function (\r\n    object: any,\r\n    pointOfImpact: any,\r\n    normal: any,\r\n    maxRadialIterations: any,\r\n    maxRandomIterations: any\r\n  ) {\r\n    var debris: any = []\r\n\r\n    var tempPlane1 = this.tempPlane1\r\n    var tempPlane2 = this.tempPlane2\r\n\r\n    this.tempVector3.addVectors(pointOfImpact, normal)\r\n    tempPlane1.setFromCoplanarPoints(pointOfImpact, object.position, this.tempVector3)\r\n\r\n    var maxTotalIterations = maxRandomIterations + maxRadialIterations\r\n\r\n    var scope = this\r\n\r\n    function subdivideRadial(subObject: any, startAngle: any, endAngle: any, numIterations: any) {\r\n      if (Math.random() < numIterations * 0.05 || numIterations > maxTotalIterations) {\r\n        debris.push(subObject)\r\n\r\n        return\r\n      }\r\n\r\n      var angle = Math.PI\r\n\r\n      if (numIterations === 0) {\r\n        tempPlane2.normal.copy(tempPlane1.normal)\r\n        tempPlane2.constant = tempPlane1.constant\r\n      } else {\r\n        if (numIterations <= maxRadialIterations) {\r\n          angle = (endAngle - startAngle) * (0.2 + 0.6 * Math.random()) + startAngle\r\n\r\n          // Rotate tempPlane2 at impact point around normal axis and the angle\r\n          scope.tempVector3_2.copy(object.position).sub(pointOfImpact).applyAxisAngle(normal, angle).add(pointOfImpact)\r\n          tempPlane2.setFromCoplanarPoints(pointOfImpact, scope.tempVector3, scope.tempVector3_2)\r\n        } else {\r\n          angle = (0.5 * (numIterations & 1) + 0.2 * (2 - Math.random())) * Math.PI\r\n\r\n          // Rotate tempPlane2 at object position around normal axis and the angle\r\n          scope.tempVector3_2\r\n            .copy(pointOfImpact)\r\n            .sub(subObject.position)\r\n            .applyAxisAngle(normal, angle)\r\n            .add(subObject.position)\r\n          scope.tempVector3_3.copy(normal).add(subObject.position)\r\n          tempPlane2.setFromCoplanarPoints(subObject.position, scope.tempVector3_3, scope.tempVector3_2)\r\n        }\r\n      }\r\n\r\n      // Perform the cut\r\n      scope.cutByPlane(subObject, tempPlane2, scope.tempResultObjects)\r\n\r\n      var obj1 = scope.tempResultObjects.object1\r\n      var obj2 = scope.tempResultObjects.object2\r\n\r\n      if (obj1) {\r\n        subdivideRadial(obj1, startAngle, angle, numIterations + 1)\r\n      }\r\n\r\n      if (obj2) {\r\n        subdivideRadial(obj2, angle, endAngle, numIterations + 1)\r\n      }\r\n    }\r\n\r\n    subdivideRadial(object, 0, 2 * Math.PI, 0)\r\n\r\n    return debris\r\n  },\r\n\r\n  cutByPlane: function (object: any, plane: any, output: any) {\r\n    // Returns breakable objects in output.object1 and output.object2 members, the resulting 2 pieces of the cut.\r\n    // object2 can be null if the plane doesn't cut the object.\r\n    // object1 can be null only in case of internal error\r\n    // Returned value is number of pieces, 0 for error.\r\n\r\n    var geometry = object.geometry\r\n    var coords = geometry.attributes.position.array\r\n    var normals = geometry.attributes.normal.array\r\n\r\n    var numPoints = coords.length / 3\r\n    var numFaces = numPoints / 3\r\n\r\n    var indices = geometry.getIndex()\r\n\r\n    if (indices) {\r\n      indices = indices.array\r\n      numFaces = indices.length / 3\r\n    }\r\n\r\n    function getVertexIndex(faceIdx: any, vert: any) {\r\n      // vert = 0, 1 or 2.\r\n\r\n      var idx = faceIdx * 3 + vert\r\n\r\n      return indices ? indices[idx] : idx\r\n    }\r\n\r\n    var points1 = []\r\n    var points2 = []\r\n\r\n    var delta = this.smallDelta\r\n\r\n    // Reset segments mark\r\n    var numPointPairs = numPoints * numPoints\r\n    for (var i = 0; i < numPointPairs; i++) this.segments[i] = false\r\n\r\n    var p0 = this.tempVector3_P0\r\n    var p1 = this.tempVector3_P1\r\n    var n0 = this.tempVector3_N0\r\n    var n1 = this.tempVector3_N1\r\n\r\n    // Iterate through the faces to mark edges shared by coplanar faces\r\n    for (var i = 0; i < numFaces - 1; i++) {\r\n      var a1 = getVertexIndex(i, 0)\r\n      var b1 = getVertexIndex(i, 1)\r\n      var c1 = getVertexIndex(i, 2)\r\n\r\n      // Assuming all 3 vertices have the same normal\r\n      n0.set(normals[a1], normals[a1] + 1, normals[a1] + 2)\r\n\r\n      for (var j = i + 1; j < numFaces; j++) {\r\n        var a2 = getVertexIndex(j, 0)\r\n        var b2 = getVertexIndex(j, 1)\r\n        var c2 = getVertexIndex(j, 2)\r\n\r\n        // Assuming all 3 vertices have the same normal\r\n        n1.set(normals[a2], normals[a2] + 1, normals[a2] + 2)\r\n\r\n        var coplanar = 1 - n0.dot(n1) < delta\r\n\r\n        if (coplanar) {\r\n          if (a1 === a2 || a1 === b2 || a1 === c2) {\r\n            if (b1 === a2 || b1 === b2 || b1 === c2) {\r\n              this.segments[a1 * numPoints + b1] = true\r\n              this.segments[b1 * numPoints + a1] = true\r\n            } else {\r\n              this.segments[c1 * numPoints + a1] = true\r\n              this.segments[a1 * numPoints + c1] = true\r\n            }\r\n          } else if (b1 === a2 || b1 === b2 || b1 === c2) {\r\n            this.segments[c1 * numPoints + b1] = true\r\n            this.segments[b1 * numPoints + c1] = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Transform the plane to object local space\r\n    var localPlane = this.tempPlane_Cut\r\n    object.updateMatrix()\r\n    ConvexObjectBreaker.transformPlaneToLocalSpace(plane, object.matrix, localPlane)\r\n\r\n    // Iterate through the faces adding points to both pieces\r\n    for (var i = 0; i < numFaces; i++) {\r\n      var va = getVertexIndex(i, 0)\r\n      var vb = getVertexIndex(i, 1)\r\n      var vc = getVertexIndex(i, 2)\r\n\r\n      for (var segment = 0; segment < 3; segment++) {\r\n        var i0 = segment === 0 ? va : segment === 1 ? vb : vc\r\n        var i1 = segment === 0 ? vb : segment === 1 ? vc : va\r\n\r\n        var segmentState = this.segments[i0 * numPoints + i1]\r\n\r\n        if (segmentState) continue // The segment already has been processed in another face\r\n\r\n        // Mark segment as processed (also inverted segment)\r\n        this.segments[i0 * numPoints + i1] = true\r\n        this.segments[i1 * numPoints + i0] = true\r\n\r\n        p0.set(coords[3 * i0], coords[3 * i0 + 1], coords[3 * i0 + 2])\r\n        p1.set(coords[3 * i1], coords[3 * i1 + 1], coords[3 * i1 + 2])\r\n\r\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\r\n        var mark0 = 0\r\n\r\n        var d = localPlane.distanceToPoint(p0)\r\n\r\n        if (d > delta) {\r\n          mark0 = 2\r\n          points2.push(p0.clone())\r\n        } else if (d < -delta) {\r\n          mark0 = 1\r\n          points1.push(p0.clone())\r\n        } else {\r\n          mark0 = 3\r\n          points1.push(p0.clone())\r\n          points2.push(p0.clone())\r\n        }\r\n\r\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\r\n        var mark1 = 0\r\n\r\n        var d = localPlane.distanceToPoint(p1)\r\n\r\n        if (d > delta) {\r\n          mark1 = 2\r\n          points2.push(p1.clone())\r\n        } else if (d < -delta) {\r\n          mark1 = 1\r\n          points1.push(p1.clone())\r\n        } else {\r\n          mark1 = 3\r\n          points1.push(p1.clone())\r\n          points2.push(p1.clone())\r\n        }\r\n\r\n        if ((mark0 === 1 && mark1 === 2) || (mark0 === 2 && mark1 === 1)) {\r\n          // Intersection of segment with the plane\r\n\r\n          this.tempLine1.start.copy(p0)\r\n          this.tempLine1.end.copy(p1)\r\n\r\n          var intersection = new Vector3()\r\n          intersection = localPlane.intersectLine(this.tempLine1, intersection)\r\n\r\n          if (intersection === undefined) {\r\n            // Shouldn't happen\r\n            console.error('Internal error: segment does not intersect plane.')\r\n            output.segmentedObject1 = null\r\n            output.segmentedObject2 = null\r\n            return 0\r\n          }\r\n\r\n          points1.push(intersection)\r\n          points2.push(intersection.clone())\r\n        }\r\n      }\r\n    }\r\n\r\n    // Calculate debris mass (very fast and imprecise):\r\n    var newMass = object.userData.ammoPhysicsData.mass * 0.5\r\n\r\n    // Calculate debris Center of Mass (again fast and imprecise)\r\n    this.tempCM1.set(0, 0, 0)\r\n    var radius1 = 0\r\n    var numPoints1 = points1.length\r\n\r\n    if (numPoints1 > 0) {\r\n      for (var i = 0; i < numPoints1; i++) this.tempCM1.add(points1[i])\r\n\r\n      this.tempCM1.divideScalar(numPoints1)\r\n      for (var i = 0; i < numPoints1; i++) {\r\n        var p = points1[i]\r\n        p.sub(this.tempCM1)\r\n        radius1 = Math.max(radius1, p.x, p.y, p.z)\r\n      }\r\n      this.tempCM1.add(object.position)\r\n    }\r\n\r\n    this.tempCM2.set(0, 0, 0)\r\n    var radius2 = 0\r\n    var numPoints2 = points2.length\r\n    if (numPoints2 > 0) {\r\n      for (var i = 0; i < numPoints2; i++) this.tempCM2.add(points2[i])\r\n\r\n      this.tempCM2.divideScalar(numPoints2)\r\n      for (var i = 0; i < numPoints2; i++) {\r\n        var p = points2[i]\r\n        p.sub(this.tempCM2)\r\n        radius2 = Math.max(radius2, p.x, p.y, p.z)\r\n      }\r\n      this.tempCM2.add(object.position)\r\n    }\r\n\r\n    var object1 = null\r\n    var object2 = null\r\n\r\n    var numObjects = 0\r\n    \r\n    /**\r\n     * MOD: Wrapped in try catch block to avoid errors\r\n     */\r\n    if (numPoints1 > 4) {\r\n      try {\r\n        object1 = new Mesh(new ConvexBufferGeometry(points1), object.material)\r\n        object1.position.copy(this.tempCM1)\r\n        object1.quaternion.copy(object.quaternion)\r\n        object1.userData = object.userData\r\n        \r\n        this.prepareBreakableObject(\r\n          object1,\r\n          newMass,\r\n          object.userData.ammoPhysicsData.velocity,\r\n          object.userData.ammoPhysicsData.angularVelocity,\r\n          2 * radius1 > this.minSizeForBreak\r\n        )\r\n\r\n        numObjects++\r\n      } catch (error) {\r\n        logger('Error in ConvexObjectBreaker.ts')\r\n        logger(error)\r\n      }\r\n    }\r\n\r\n    if (numPoints2 > 4) {\r\n      try {\r\n        object2 = new Mesh(new ConvexBufferGeometry(points2), object.material)\r\n        object2.position.copy(this.tempCM2)\r\n        object2.quaternion.copy(object.quaternion)\r\n        object2.userData = object.userData\r\n\r\n        this.prepareBreakableObject(\r\n          object2,\r\n          newMass,\r\n          object.userData.ammoPhysicsData.velocity,\r\n          object.userData.ammoPhysicsData.angularVelocity,\r\n          2 * radius2 > this.minSizeForBreak\r\n        )\r\n\r\n        numObjects++\r\n      } catch (error) {\r\n        logger('Error in ConvexObjectBreaker.ts')\r\n        logger(error)\r\n      }\r\n    }\r\n\r\n    output.object1 = object1\r\n    output.object2 = object2\r\n\r\n    return numObjects\r\n  }\r\n}\r\n\r\nConvexObjectBreaker.transformFreeVector = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a free vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[4] * y + e[8] * z\r\n  v.y = e[1] * x + e[5] * y + e[9] * z\r\n  v.z = e[2] * x + e[6] * y + e[10] * z\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformFreeVectorInverse = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a free vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[1] * y + e[2] * z\r\n  v.y = e[4] * x + e[5] * y + e[6] * z\r\n  v.z = e[8] * x + e[9] * y + e[10] * z\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformTiedVectorInverse = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a tied (ordinary) vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[1] * y + e[2] * z - e[12]\r\n  v.y = e[4] * x + e[5] * y + e[6] * z - e[13]\r\n  v.z = e[8] * x + e[9] * y + e[10] * z - e[14]\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformPlaneToLocalSpace = (function () {\r\n  var v1 = new Vector3()\r\n\r\n  return function transformPlaneToLocalSpace(plane: any, m: any, resultPlane: any) {\r\n    resultPlane.normal.copy(plane.normal)\r\n    resultPlane.constant = plane.constant\r\n\r\n    var referencePoint = ConvexObjectBreaker.transformTiedVectorInverse(plane.coplanarPoint(v1), m)\r\n\r\n    ConvexObjectBreaker.transformFreeVectorInverse(resultPlane.normal, m)\r\n\r\n    // recalculate constant (like in setFromNormalAndCoplanarPoint)\r\n    resultPlane.constant = -referencePoint.dot(resultPlane.normal)\r\n  }\r\n})()\r\n\r\nexport { ConvexObjectBreaker }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport applyMixins from '@enable3d/common/dist/applyMixins'\r\nimport ClosestRayResultCallback from './closestRayResultCallback'\r\nimport AllHitsRayResultCallback from './allHitsRayResultCallback'\r\nimport { AmmoPhysics } from '../physics'\r\n\r\nclass Raycaster {\r\n  public readonly type: string\r\n  protected _btRayFrom: Ammo.btVector3\r\n  protected _btRayTo: Ammo.btVector3\r\n  protected _btRayCallback: Ammo.RayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  setRayFromWorld(x = 0, y = 0, z = 0) {\r\n    this._btRayFrom.setValue(x, y, z)\r\n  }\r\n\r\n  setRayToWorld(x = 0, y = 0, z = 0) {\r\n    this._btRayTo.setValue(x, y, z)\r\n  }\r\n\r\n  hasHit() {\r\n    return this._btRayCallback.hasHit()\r\n  }\r\n\r\n  rayTest() {\r\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\r\n\r\n    this._btRayCallback =\r\n      this.type === 'closest'\r\n        ? new Ammo.ClosestRayResultCallback(this._btRayFrom, this._btRayTo)\r\n        : new Ammo.AllHitsRayResultCallback(this._btRayFrom, this._btRayTo)\r\n\r\n    this.physics.physicsWorld.rayTest(this._btRayFrom, this._btRayTo, this._btRayCallback)\r\n  }\r\n\r\n  destroy() {\r\n    if (typeof this._btRayFrom !== 'undefined') Ammo.destroy(this._btRayFrom)\r\n    if (typeof this._btRayTo !== 'undefined') Ammo.destroy(this._btRayTo)\r\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\r\n  }\r\n}\r\n\r\ninterface ClosestRaycaster extends Raycaster, ClosestRayResultCallback {}\r\ninterface AllHitsRaycaster extends Raycaster, AllHitsRayResultCallback {}\r\n\r\nclass ClosestRaycaster implements Raycaster, ClosestRayResultCallback {\r\n  public readonly type = 'closest'\r\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n}\r\n\r\nclass AllHitsRaycaster implements Raycaster, AllHitsRayResultCallback {\r\n  public readonly type = 'allHits'\r\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n}\r\n\r\napplyMixins(ClosestRaycaster, [Raycaster, ClosestRayResultCallback])\r\napplyMixins(AllHitsRaycaster, [Raycaster, AllHitsRayResultCallback])\r\n\r\nexport { ClosestRaycaster, AllHitsRaycaster }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { AmmoPhysics } from '../physics'\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\r\n\r\nexport default class ClosestRayResultCallback {\r\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  getHitPointWorld(): { x: number; y: number; z: number } {\r\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3\r\n\r\n    const point = { x: h.x(), y: h.y(), z: h.z() }\r\n\r\n    return point\r\n  }\r\n\r\n  getHitNormalWorld() {\r\n    const h = this._btRayCallback.get_m_hitNormalWorld()\r\n\r\n    const normal = { x: h.x(), y: h.y(), z: h.z() }\r\n\r\n    return normal\r\n  }\r\n\r\n  getCollisionObject(): ExtendedObject3D {\r\n    // @ts-ignore\r\n    const rb = Ammo.castObject(this._btRayCallback.get_m_collisionObject(), Ammo.btRigidBody)\r\n    // @ts-ignore\r\n    return rb.threeObject\r\n  }\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { AmmoPhysics } from '../physics'\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\r\n\r\nexport default class AllHitsRayResultCallback {\r\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  getHitPointsWorld() {\r\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3Array\r\n\r\n    const points = []\r\n    for (let i = h.size() - 1; i >= 0; i--) {\r\n      const hh = h.at(i)\r\n      points.push({ x: hh.x(), y: hh.y(), z: hh.z() })\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // TODO: Remove this in future versions!\r\n  getHitPointWorld() {\r\n    console.warn('[enable3d] Use getHitPointsWorld() instead of getHitPointWorld() for the AllHitsRayCaster!')\r\n    return this.getHitPointsWorld()\r\n  }\r\n\r\n  getHitNormalsWorld() {\r\n    const h = this._btRayCallback.get_m_hitNormalWorld()\r\n\r\n    const normals = []\r\n    for (let i = h.size() - 1; i >= 0; i--) {\r\n      const hh = h.at(i)\r\n      normals.push({ x: hh.x(), y: hh.y(), z: hh.z() })\r\n    }\r\n\r\n    return normals\r\n  }\r\n\r\n  getCollisionObjects() {\r\n    const threeObjects: ExtendedObject3D[] = []\r\n    const objects = this._btRayCallback.get_m_collisionObjects()\r\n\r\n    for (let i = objects.size() - 1; i >= 0; i--) {\r\n      // @ts-ignore\r\n      const rb = Ammo.castObject(objects.at(i), Ammo.btRigidBody)\r\n      // @ts-ignore\r\n      threeObjects.push(rb.threeObject)\r\n    }\r\n    return threeObjects\r\n  }\r\n}\r\n","/**\r\n * @author yandeu\r\n * @description Ported to TypeScript\r\n */\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\n/**\r\n * This is the Clock class THREE provides.\r\n */\r\nclass Clock {\r\n  autoStart: boolean\r\n  startTime: number\r\n  oldTime: number\r\n  elapsedTime: number\r\n  running: boolean\r\n\r\n  constructor(autoStart = true) {\r\n    this.autoStart = autoStart !== undefined ? autoStart : true\r\n    this.startTime = 0\r\n    this.oldTime = 0\r\n    this.elapsedTime = 0\r\n    this.running = false\r\n  }\r\n\r\n  start() {\r\n    this.startTime = (typeof performance === 'undefined' ? Date : performance).now() // see #10732\r\n\r\n    this.oldTime = this.startTime\r\n    this.elapsedTime = 0\r\n    this.running = true\r\n  }\r\n\r\n  stop() {\r\n    this.getElapsedTime()\r\n    this.running = false\r\n    this.autoStart = false\r\n  }\r\n\r\n  getElapsedTime() {\r\n    this.getDelta()\r\n    return this.elapsedTime\r\n  }\r\n\r\n  getDelta() {\r\n    let diff = 0\r\n\r\n    if (this.autoStart && !this.running) {\r\n      this.start()\r\n      return 0\r\n    }\r\n\r\n    if (this.running) {\r\n      let newTime = (typeof performance === 'undefined' ? Date : performance).now()\r\n\r\n      diff = (newTime - this.oldTime) / 1000\r\n      this.oldTime = newTime\r\n\r\n      this.elapsedTime += diff\r\n    }\r\n\r\n    return diff\r\n  }\r\n}\r\n\r\nexport { Clock }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport logger from '@enable3d/common/dist/logger'\r\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\r\n\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/extendedObject3D'\r\nexport { ExtendedObject3D }\r\n\r\nimport { ExtendedMesh } from '@enable3d/common/dist/extendedMesh'\r\nexport { ExtendedMesh }\r\n\r\nimport { ExtendedGroup } from '@enable3d/common/dist/extendedGroup'\r\nexport { ExtendedGroup }\r\n\r\nimport Shapes from './shapes'\r\nimport Constraints from './constraints'\r\nimport { EventEmitter } from 'eventemitter3'\r\nimport {\r\n  Vector3,\r\n  Quaternion,\r\n  Scene,\r\n  Euler,\r\n  Matrix4,\r\n  Geometry,\r\n  BufferGeometry,\r\n  REVISION\r\n} from '@enable3d/three-wrapper/dist/index'\r\nimport {\r\n  iterateGeometries,\r\n  createHullShape,\r\n  createHACDShapes,\r\n  createVHACDShapes,\r\n  createTriMeshShape\r\n} from './three-to-ammo'\r\nimport { createTorusShape } from './torusShape'\r\nimport Factories from '@enable3d/common/dist/factories'\r\nimport { CollisionEvents } from './collisionEvents'\r\n\r\nimport DebugDrawer from './debugDrawer'\r\nimport { ConvexObjectBreaker } from './convexObjectBreaker'\r\n\r\nimport { PhysicsLoader } from '@enable3d/common/dist/physicsLoader'\r\nimport DefaultMaterial from '@enable3d/common/dist/defaultMaterial'\r\nexport { PhysicsLoader }\r\n\r\nimport * as Types from '@enable3d/common/dist/types'\r\nimport { ClosestRaycaster, AllHitsRaycaster } from './raycaster/raycaster'\r\nexport { ClosestRaycaster, AllHitsRaycaster }\r\nexport { Types }\r\n\r\n// Export THREE.Clock\r\nexport { Clock } from './lib/Clock'\r\n\r\nclass AmmoPhysics extends EventEmitter {\r\n  public worldTransform: Ammo.btTransform\r\n  public factory: Factories\r\n  public isHeadless: boolean\r\n\r\n  public rigidBodies: ExtendedObject3D[] = []\r\n  protected earlierDetectedCollisions: { combinedName: string; collision: boolean }[] = []\r\n  protected gravity: { x: number; y: number; z: number }\r\n\r\n  protected tmpEuler: Euler\r\n  protected tmpQuaternion: Quaternion\r\n  protected tmpVector3: Vector3\r\n  protected tmpVector3a: Vector3\r\n  protected tmpMatrix4: Matrix4\r\n  protected tmpMatrix4a: Matrix4\r\n  protected tmpBtVector3: Ammo.btVector3\r\n  protected tmpBtQuaternion: Ammo.btQuaternion\r\n\r\n  public physicsWorld: Ammo.btSoftRigidDynamicsWorld\r\n  protected debugDrawer: DebugDrawer\r\n  private convexBreaker: any\r\n  protected addRigidBody: (threeObject: ExtendedObject3D, physicsShape: any, mass: any, pos: any, quat: any) => void\r\n  private objectsToRemove: any[]\r\n  private numObjectsToRemove: number\r\n\r\n  protected emptyV3: Vector3\r\n  protected impactPoint: Vector3\r\n  protected impactNormal: Vector3\r\n\r\n  protected defaultMaterial: DefaultMaterial\r\n\r\n  private shapes: Shapes\r\n  private constraints: Constraints\r\n  private collisionEvents: CollisionEvents\r\n\r\n  private readonly complexShapes = ['plane', 'hull', 'hacd', 'vhacd', 'convexMesh', 'concaveMesh']\r\n\r\n  constructor(public scene: Scene | 'headless', public config: Types.ThreeGraphicsConfig = {}) {\r\n    super()\r\n\r\n    this.gravity = config.gravity || { x: 0, y: -9.81, z: 0 }\r\n    this.isHeadless = scene === 'headless' ? true : false\r\n\r\n    this.tmpEuler = new Euler()\r\n    this.tmpQuaternion = new Quaternion()\r\n    this.tmpVector3 = new Vector3()\r\n    this.tmpVector3a = new Vector3()\r\n    this.tmpMatrix4 = new Matrix4()\r\n    this.tmpMatrix4a = new Matrix4()\r\n    this.tmpBtVector3 = new Ammo.btVector3()\r\n    this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1)\r\n    this.emptyV3 = new Vector3()\r\n    this.impactPoint = new Vector3()\r\n    this.impactNormal = new Vector3()\r\n\r\n    if (scene !== 'headless') {\r\n      this.defaultMaterial = new DefaultMaterial()\r\n\r\n      // const info = `Ammo.js physics provided by enable3d`\r\n      // console.log(\r\n      //   `%c %c %c %c %c ${info} %c https://enable3d.io/`,\r\n      //   'background: #ff0000',\r\n      //   'background: #ffff00',\r\n      //   'background: #00ff00',\r\n      //   'background: #00ffff',\r\n      //   'color: #fff; background: #000000;',\r\n      //   'background: none'\r\n      // )\r\n    }\r\n\r\n    this.start()\r\n  }\r\n\r\n  /** @deprecated Use worldTransform instead of tmpTrans. */\r\n  get tmpTrans() {\r\n    console.warn('Use worldTransform instead of tmpTrans.')\r\n    return this.worldTransform\r\n  }\r\n\r\n  /** @deprecated Use worldTransform instead of tmpTrans. */\r\n  set tmpTrans(transform: Ammo.btTransform) {\r\n    console.warn('Use worldTransform instead of tmpTrans.')\r\n    this.worldTransform = transform\r\n  }\r\n\r\n  /** Destroys a physics body. */\r\n  public destroy(body: PhysicsBody | ExtendedObject3D | ExtendedMesh) {\r\n    // @ts-ignore\r\n    const b: PhysicsBody = Object.keys(body).includes('body') ? body.body : body\r\n\r\n    if (typeof b?.ammo === 'undefined') return\r\n\r\n    // @ts-ignore\r\n    const name = b.ammo.name\r\n    // @ts-ignore\r\n    let obj: ExtendedObject3D | null = b.ammo.threeObject as ExtendedObject3D\r\n\r\n    if (name && obj) {\r\n      if (obj?.body?.ammo) {\r\n        // remove from physics world\r\n        !obj.body.isSoftBody\r\n          ? this.physicsWorld.removeRigidBody(obj.body.ammo)\r\n          : this.physicsWorld.removeSoftBody(obj.body.ammo as any)\r\n\r\n        // call destructor on body\r\n        obj.body.destructor()\r\n\r\n        // reset properties\r\n        // @ts-ignore\r\n        obj.body = undefined\r\n        obj.hasBody = false\r\n\r\n        // remove from this.objectAmmo\r\n        // @ts-ignore\r\n        delete b.ammo.threeObject\r\n        // remove from this.rigidBodies\r\n        for (let i = 0; i < this.rigidBodies.length; i++) {\r\n          if (this.rigidBodies[i].name === name) {\r\n            this.rigidBodies.splice(i, 1)\r\n            i--\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.scene === 'headless' && obj) obj = null\r\n  }\r\n\r\n  protected setup() {\r\n    // add worldTransform\r\n    this.worldTransform = new Ammo.btTransform()\r\n\r\n    // setup ammo physics\r\n    if (typeof this.config.setupPhysicsWorld === 'function') this.physicsWorld = this.config.setupPhysicsWorld() as any\r\n    else this.physicsWorld = this.setupPhysicsWorld()\r\n\r\n    if (this.scene !== 'headless') {\r\n      // Initialize convexBreaker\r\n      // @ts-ignore\r\n      this.convexBreaker = new ConvexObjectBreaker()\r\n\r\n      this.objectsToRemove = []\r\n      this.numObjectsToRemove = 0\r\n      for (let i = 0; i < 500; i++) {\r\n        this.objectsToRemove[i] = null\r\n      }\r\n    }\r\n\r\n    this.collisionEvents = new CollisionEvents()\r\n    this.factory = new Factories(this.scene)\r\n    this.shapes = new Shapes(this.factory, (object: ExtendedObject3D, config?: Types.AddExistingConfig) =>\r\n      this.addExisting(object, config)\r\n    )\r\n    this.constraints = new Constraints(this.worldTransform, this.physicsWorld)\r\n\r\n    if (this.scene !== 'headless') this.debugDrawer = new DebugDrawer(this.scene, this.physicsWorld, {})\r\n  }\r\n\r\n  public updateDebugger() {\r\n    if (this.scene === 'headless') return\r\n\r\n    if (this.debugDrawer && this.debugDrawer.enabled) this.debugDrawer.update()\r\n  }\r\n\r\n  protected setupPhysicsWorld() {\r\n    const g = this.gravity\r\n    const { softBodies = false } = this.config\r\n\r\n    let physicsWorld: any\r\n\r\n    if (!softBodies) {\r\n      const collisionConfiguration = new Ammo.btDefaultCollisionConfiguration(),\r\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\r\n        broadphase = new Ammo.btDbvtBroadphase(),\r\n        solver = new Ammo.btSequentialImpulseConstraintSolver()\r\n      physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration)\r\n    }\r\n\r\n    if (softBodies) {\r\n      const collisionConfiguration = new Ammo.btSoftBodyRigidBodyCollisionConfiguration(),\r\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\r\n        broadphase = new Ammo.btDbvtBroadphase(),\r\n        solver = new Ammo.btSequentialImpulseConstraintSolver(),\r\n        softBodySolver = new Ammo.btDefaultSoftBodySolver()\r\n      physicsWorld = new Ammo.btSoftRigidDynamicsWorld(\r\n        dispatcher,\r\n        broadphase,\r\n        solver,\r\n        collisionConfiguration,\r\n        softBodySolver\r\n      )\r\n    }\r\n\r\n    physicsWorld.setGravity(new Ammo.btVector3(g.x, g.y, g.z))\r\n    return physicsWorld\r\n  }\r\n\r\n  private createDebrisFromBreakableObject(object: ExtendedObject3D, parent: ExtendedObject3D) {\r\n    if (this.scene === 'headless') return\r\n\r\n    object.material = this.defaultMaterial.get()\r\n    object.shape = 'hull'\r\n    object.fragmentDepth = parent.fragmentDepth + 1\r\n\r\n    // Add the object to the scene\r\n    this.scene.add(object)\r\n\r\n    // Add physics to the object\r\n    // @ts-ignore\r\n    this.addExisting(object)\r\n\r\n    object.body.breakable = false\r\n    // make this fragment breakable in 2.5seconds\r\n    setTimeout(() => {\r\n      object.body.breakable = true\r\n    }, 2500)\r\n  }\r\n\r\n  private removeDebris(object: any) {\r\n    if (this.scene === 'headless') return\r\n\r\n    this.scene.remove(object)\r\n    this.destroy(object)\r\n  }\r\n\r\n  public update(delta: number) {\r\n    this.updatePhysics(delta)\r\n    this.detectCollisions()\r\n  }\r\n\r\n  private updatePhysics(delta: number) {\r\n    // step world\r\n    const deltaTime = delta / 1000\r\n\r\n    // must always satisfy the equation timeStep < maxSubSteps * fixedTimeStep\r\n    this.physicsWorld.stepSimulation(deltaTime, this.config.maxSubSteps || 4, this.config.fixedTimeStep || 1 / 60)\r\n\r\n    // update rigid bodies\r\n    for (let i = 0; i < this.rigidBodies.length; i++) {\r\n      const objThree = this.rigidBodies[i]\r\n      const objPhys = objThree.body.ammo\r\n      const ms = objPhys.getMotionState()\r\n\r\n      if (ms) {\r\n        ms.getWorldTransform(this.worldTransform)\r\n\r\n        // check if object did an update since last call\r\n        if (objThree.body.didUpdate) {\r\n          // @ts-ignore\r\n          if (objThree.body._emitUpdateEvents) objThree.body.eventEmitter.emit('update')\r\n          objThree.body.didUpdate = false\r\n        }\r\n\r\n        // update positions\r\n        if (objThree.body.ammo.isKinematicObject() && objThree.body.needUpdate) {\r\n          // get position and rotation\r\n          objThree.getWorldQuaternion(this.tmpQuaternion)\r\n          objThree.getWorldPosition(this.tmpVector3)\r\n          // adjust tmp variables\r\n          this.tmpBtVector3.setValue(this.tmpVector3.x, this.tmpVector3.y, this.tmpVector3.z)\r\n          this.tmpBtQuaternion.setValue(\r\n            this.tmpQuaternion.x,\r\n            this.tmpQuaternion.y,\r\n            this.tmpQuaternion.z,\r\n            this.tmpQuaternion.w\r\n          )\r\n          // set position and rotation\r\n          this.worldTransform.setOrigin(this.tmpBtVector3)\r\n          this.worldTransform.setRotation(this.tmpBtQuaternion)\r\n          // set transform\r\n          ms.setWorldTransform(this.worldTransform)\r\n          // reset needsUpdate\r\n          objThree.body.needUpdate = false\r\n        } else if (objThree.body.skipUpdate) {\r\n          // do nothing ...\r\n        } else if (!objThree.body.ammo.isStaticObject()) {\r\n          // get position and rotation\r\n          let p = this.worldTransform.getOrigin()\r\n          let q = this.worldTransform.getRotation()\r\n          // body offset\r\n          let o = objThree.body.offset\r\n          // set position and rotation\r\n          if (objThree.body.ignoreScale) {\r\n            this.tmpVector3a.set(objThree.scale.x, objThree.scale.y, objThree.scale.z)\r\n          } else {\r\n            const scale = objThree.body.ammo.getCollisionShape().getLocalScaling()\r\n            this.tmpVector3a.set(scale.x(), scale.y(), scale.z())\r\n          }\r\n          this.tmpVector3.set(p.x() + o.x, p.y() + o.y, p.z() + o.z)\r\n          this.tmpQuaternion.set(q.x(), q.y(), q.z(), q.w())\r\n          this.tmpMatrix4.compose(this.tmpVector3, this.tmpQuaternion, this.tmpVector3a)\r\n          if (objThree.parent) {\r\n            // compatibility fix for three.js >= r123 (Dezember 2020)\r\n            // @ts-ignore\r\n            if (+REVISION >= 123) this.tmpMatrix4a.copy(objThree.parent.matrixWorld).invert()\r\n            else this.tmpMatrix4a.getInverse(objThree.parent.matrixWorld)\r\n          } else {\r\n            this.tmpMatrix4a.identity()\r\n          }\r\n          this.tmpMatrix4a.multiply(this.tmpMatrix4)\r\n          this.tmpMatrix4a.decompose(objThree.position, objThree.quaternion, objThree.scale)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private detectCollisions() {\r\n    const detectedCollisions: { combinedName: string; collision: boolean }[] = []\r\n\r\n    // reset these vectors\r\n    this.impactPoint.set(0, 0, 0)\r\n    this.impactNormal.set(0, 0, 0)\r\n\r\n    const dispatcher = this.physicsWorld.getDispatcher()\r\n    const numManifolds = dispatcher.getNumManifolds()\r\n\r\n    // check collisions\r\n    for (let i = 0; i < numManifolds; i++) {\r\n      let contactManifold = dispatcher.getManifoldByIndexInternal(i)\r\n      let numContacts = contactManifold.getNumContacts()\r\n\r\n      // @ts-ignore\r\n      const rb0 = Ammo.castObject(contactManifold.getBody0(), Ammo.btRigidBody)\r\n      // @ts-ignore\r\n      const rb1 = Ammo.castObject(contactManifold.getBody1(), Ammo.btRigidBody)\r\n\r\n      let threeObject0 = rb0.threeObject as ExtendedObject3D\r\n      let threeObject1 = rb1.threeObject as ExtendedObject3D\r\n\r\n      if (!threeObject0 || !threeObject1) {\r\n        continue\r\n      }\r\n\r\n      // do not check collision between 2 unnamed objects\r\n      // (fragments do not have a name, for example)\r\n      if (rb0.name === '' && rb1.name === '') continue\r\n\r\n      /**\r\n       * Get some information\r\n       */\r\n\r\n      const checkCollisions0 = threeObject0.body?.checkCollisions\r\n      const checkCollisions1 = threeObject1.body?.checkCollisions\r\n\r\n      const breakable0 = threeObject0.body.breakable\r\n      const breakable1 = threeObject1.body.breakable\r\n\r\n      const checkCollisions = checkCollisions0 || checkCollisions1\r\n      const checkBreakable = breakable0 || breakable1\r\n\r\n      if (!checkCollisions && !checkBreakable) continue\r\n\r\n      let contact = false\r\n      let maxImpulse = 0\r\n\r\n      let event: Types.CollisionEvent = 'start'\r\n\r\n      for (let j = 0; j < numContacts; j++) {\r\n        const contactPoint = contactManifold.getContactPoint(j)\r\n        const distance = contactPoint.getDistance()\r\n\r\n        // Distance definition: when the distance between objects is positive, they are separated. When the distance is negative, they are penetrating. Zero distance means exactly touching.\r\n        // https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5831\r\n        if (distance <= 0) {\r\n          contact = true\r\n          const impulse = contactPoint.getAppliedImpulse()\r\n          const impactPoint = contactPoint.get_m_positionWorldOnB()\r\n          const impactNormal = contactPoint.get_m_normalWorldOnB()\r\n\r\n          // handle collision events\r\n          if (checkCollisions0 || checkCollisions1) {\r\n            const names = [threeObject0.name, threeObject1.name].sort()\r\n            const combinedName = `${names[0]}__${names[1]}`\r\n\r\n            if (this.earlierDetectedCollisions.find(el => el.combinedName === combinedName)) event = 'collision'\r\n\r\n            if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\r\n              detectedCollisions.push({ combinedName, collision: true })\r\n              this.collisionEvents.emit('collision', { bodies: [threeObject0, threeObject1], event })\r\n            }\r\n          }\r\n\r\n          // get impactPoint and impactNormal of the hight impulse point (for breakable objects)\r\n          if (impulse >= maxImpulse) {\r\n            maxImpulse = impulse\r\n            // get what ween need for the convex breaking\r\n            if (breakable0 || breakable1) {\r\n              this.impactPoint.set(impactPoint.x(), impactPoint.y(), impactPoint.z())\r\n              this.impactNormal.set(impactNormal.x(), impactNormal.y(), impactNormal.z())\r\n            }\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n\r\n      // if no point has contact, abort\r\n      if (!contact) continue\r\n\r\n      // if no objects are breakable, abort\r\n      if (!checkBreakable) continue\r\n\r\n      /**\r\n       * check for breakable objects (subdivision)\r\n       */\r\n      const fractureImpulse = 5 //250\r\n      const MAX_FRAGMENT_DEPTH = 2\r\n\r\n      // since the library convexBreaker makes use of three's userData.ammoPhysicsData\r\n      // we have to clone the necessary params to threeObjectX.userData.ammoPhysicsData\r\n      // TODO improve this\r\n\r\n      this.emptyV3.set(0, 0, 0)\r\n      threeObject0.userData.ammoPhysicsData = {\r\n        mass: 1,\r\n        velocity: this.emptyV3,\r\n        angularVelocity: this.emptyV3,\r\n        breakable: breakable0,\r\n        physicsBody: rb0\r\n      }\r\n      threeObject1.userData.ammoPhysicsData = {\r\n        mass: 1,\r\n        velocity: this.emptyV3,\r\n        angularVelocity: this.emptyV3,\r\n        breakable: breakable1,\r\n        physicsBody: rb1\r\n      }\r\n      if (typeof threeObject0.fragmentDepth === 'undefined') threeObject0.fragmentDepth = 0\r\n      if (typeof threeObject1.fragmentDepth === 'undefined') threeObject1.fragmentDepth = 0\r\n\r\n      // threeObject0\r\n      if (breakable0 && maxImpulse > fractureImpulse && threeObject0.fragmentDepth < MAX_FRAGMENT_DEPTH) {\r\n        const debris = this.convexBreaker.subdivideByImpact(threeObject0, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\r\n\r\n        const numObjects = debris.length\r\n        for (let j = 0; j < numObjects; j++) {\r\n          const vel = rb0.getLinearVelocity()\r\n          const angVel = rb0.getAngularVelocity()\r\n          const fragment = debris[j] as ExtendedObject3D\r\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\r\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\r\n\r\n          this.createDebrisFromBreakableObject(fragment, threeObject0)\r\n        }\r\n\r\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject0\r\n      }\r\n\r\n      // threeObject1\r\n      if (breakable1 && maxImpulse > fractureImpulse && threeObject1.fragmentDepth < MAX_FRAGMENT_DEPTH) {\r\n        const debris = this.convexBreaker.subdivideByImpact(threeObject1, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\r\n\r\n        const numObjects = debris.length\r\n        for (let j = 0; j < numObjects; j++) {\r\n          const vel = rb1.getLinearVelocity()\r\n          const angVel = rb1.getAngularVelocity()\r\n          const fragment = debris[j] as ExtendedObject3D\r\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\r\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\r\n\r\n          this.createDebrisFromBreakableObject(fragment, threeObject1)\r\n        }\r\n\r\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject1\r\n      }\r\n    }\r\n\r\n    // remove objects\r\n    for (let i = 0; i < this.numObjectsToRemove; i++) {\r\n      this.removeDebris(this.objectsToRemove[i])\r\n    }\r\n    this.numObjectsToRemove = 0\r\n\r\n    // handle collision end events\r\n    this.earlierDetectedCollisions.forEach(el => {\r\n      const { combinedName } = el\r\n      if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\r\n        const split = combinedName.split('__')\r\n        const obj0 = this.rigidBodies.find(obj => obj.name === split[0])\r\n        const obj1 = this.rigidBodies.find(obj => obj.name === split[1])\r\n        const event = 'end'\r\n        if (obj0 && obj1) this.collisionEvents.emit('collision', { bodies: [obj0, obj1], event })\r\n      }\r\n    })\r\n    this.earlierDetectedCollisions = [...detectedCollisions]\r\n  }\r\n\r\n  public setGravity(x = 0, y = -9.8, z = 0) {\r\n    this.tmpBtVector3.setValue(x, y, z)\r\n    this.physicsWorld.setGravity(this.tmpBtVector3)\r\n  }\r\n\r\n  public get debug() {\r\n    if (this.isHeadless) return null\r\n\r\n    return {\r\n      enable: () => {\r\n        this.debugDrawer.enable()\r\n      },\r\n      mode: (debugMode: number = 1) => {\r\n        this.debugDrawer.setDebugMode(debugMode)\r\n      },\r\n      disable: () => {\r\n        this.debugDrawer.disable()\r\n      }\r\n    }\r\n  }\r\n\r\n  private start() {\r\n    if (typeof Ammo === 'undefined') {\r\n      logger('Are you sure you included ammo.js?')\r\n      return\r\n    }\r\n\r\n    if (typeof Ammo === 'function')\r\n      Ammo().then(() => {\r\n        this.setup()\r\n      })\r\n    else this.setup()\r\n  }\r\n\r\n  public get add() {\r\n    return {\r\n      collider: (\r\n        object1: ExtendedObject3D,\r\n        object2: ExtendedObject3D,\r\n        eventCallback: (event: Types.CollisionEvent) => void\r\n      ) => this.collisionEvents.addCollider(object1, object2, eventCallback),\r\n      constraints: this.constraints.addConstraints,\r\n      existing: (object: ExtendedObject3D, config?: Types.AddExistingConfig) => this.addExisting(object, config),\r\n      plane: (planeConfig: Types.PlaneConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addPlane(planeConfig, materialConfig),\r\n      sphere: (sphereConfig: Types.SphereConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addSphere(sphereConfig, materialConfig),\r\n      ground: (groundConfig: Types.GroundConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addGround(groundConfig, materialConfig),\r\n      box: (boxConfig: Types.BoxConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addBox(boxConfig, materialConfig),\r\n      cylinder: (cylinderConfig: Types.CylinderConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addCylinder(cylinderConfig, materialConfig),\r\n      cone: (coneConfig: Types.ConeConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addCone(coneConfig, materialConfig),\r\n      torus: (torusConfig: Types.TorusConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addTorus(torusConfig, materialConfig),\r\n      extrude: (extrudeConfig: Types.ExtrudeConfig, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addExtrude(extrudeConfig, materialConfig),\r\n      /**\r\n       * Creates a new Raycaster\r\n       * @param type Returns only the closes body by default. Can be 'closest' or 'allHits'.\r\n       */\r\n      raycaster: (type = 'closest') => {\r\n        if (type === 'closest') return new ClosestRaycaster(this) as ClosestRaycaster\r\n        else return new AllHitsRaycaster(this) as AllHitsRaycaster\r\n      }\r\n    }\r\n  }\r\n\r\n  private prepareThreeObjectForCollisionShape(object: ExtendedObject3D, config: Types.AddExistingConfig = {}) {\r\n    const { autoCenter = false } = config\r\n\r\n    // set default params\r\n    const defaultParams = {\r\n      width: 1,\r\n      height: 1,\r\n      depth: 1,\r\n      radius: 1,\r\n      radiusTop: 1, // for the cylinder\r\n      radiusBottom: 1, // for the cylinder\r\n      tube: 0.4, // for the torus\r\n      tubularSegments: 6 // for the torus\r\n    }\r\n\r\n    // determine the shape (fallback to hacd)\r\n    let shape: string = 'unknown'\r\n    // retrieve the shape from the geometry\r\n    const type = object.geometry?.type || 'unknown'\r\n    if (/box/i.test(type)) shape = 'box'\r\n    else if (/cone/i.test(type)) shape = 'cone'\r\n    else if (/cylinder/i.test(type)) shape = 'cylinder'\r\n    else if (/extrude/i.test(type)) shape = 'extrude'\r\n    else if (/plane/i.test(type)) shape = 'plane'\r\n    else if (/sphere/i.test(type)) shape = 'sphere'\r\n    else if (/torus/i.test(type)) shape = 'torus'\r\n\r\n    // @ts-ignore\r\n    let params = { ...defaultParams, ...object?.geometry?.parameters }\r\n\r\n    if (config.shape) {\r\n      params = { ...defaultParams, ...config }\r\n      shape = config.shape\r\n    } else if (object.shape) {\r\n      shape = object.shape\r\n    }\r\n\r\n    // Add all default params if undefined\r\n    Object.keys(params).forEach(key => {\r\n      // @ts-ignore\r\n      if (typeof params[key] === 'undefined' && defaultParams[key]) {\r\n        // @ts-ignore\r\n        params[key] = defaultParams[key]\r\n      }\r\n    })\r\n\r\n    // auto adjust the center for custom shapes\r\n    if (autoCenter) object.geometry.center()\r\n\r\n    // adjust the cylinder radius for its physcis body\r\n    if (shape === 'cylinder') params.radius = config.radius || params.radiusTop\r\n\r\n    // some aliases\r\n    if (shape === 'extrude') shape = 'hacd'\r\n    if (shape === 'mesh' || shape === 'convex') shape = 'convexMesh'\r\n    if (shape === 'concave') shape = 'concaveMesh'\r\n\r\n    // if we have not found a shape until here, we fallback to 'box'\r\n    if (shape === 'unknown') {\r\n      logger(`Shape for ${object?.name} not recognized! Will fallback to box.`)\r\n      shape = 'box'\r\n    }\r\n\r\n    return { shape, params, object }\r\n  }\r\n\r\n  public createCollisionShape(shape: string, params: any, object?: ExtendedObject3D): Ammo.btCollisionShape {\r\n    const quat = object?.quaternion ? object?.quaternion : new Quaternion(0, 0, 0, 1)\r\n    const { axis = 'y' } = params\r\n\r\n    const btHalfExtents = new Ammo.btVector3()\r\n\r\n    // transform geometry to bufferGeometry (because three-to-ammo works only with bufferGeometry)\r\n    const geometry = object?.geometry as Geometry\r\n    if (object && geometry?.isGeometry) {\r\n      object.geometry = new BufferGeometry().fromGeometry(geometry)\r\n    }\r\n\r\n    // prepare data to pass to three-to-ammo.js\r\n    const extractData = (object: any) => {\r\n      const matrixWorld = new Matrix4().elements\r\n      const vertices: any[] = []\r\n      const matrices: any[] = []\r\n      const indexes: any[] = []\r\n      iterateGeometries(object, {}, (vertexArray: any, matrixArray: any, indexArray: any) => {\r\n        vertices.push(vertexArray)\r\n        matrices.push(matrixArray)\r\n        indexes.push(indexArray)\r\n      })\r\n\r\n      return { vertices, matrices, indexes, matrixWorld }\r\n    }\r\n\r\n    let d = {} as any\r\n    // extract data for complex shapes generated with three-to-ammo.js\r\n    if (this.complexShapes.indexOf(shape) > 0) d = extractData(object)\r\n\r\n    let collisionShape\r\n    switch (shape) {\r\n      case 'box':\r\n        btHalfExtents.setValue(params.width / 2, params.height / 2, params.depth / 2)\r\n        collisionShape = new Ammo.btBoxShape(btHalfExtents)\r\n        break\r\n      case 'sphere':\r\n        collisionShape = new Ammo.btSphereShape(params.radius)\r\n        break\r\n      case 'cylinder':\r\n        switch (axis) {\r\n          case 'y':\r\n            btHalfExtents.setValue(params.radius, params.height / 2, params.radius)\r\n            collisionShape = new Ammo.btCylinderShape(btHalfExtents)\r\n            break\r\n          case 'x':\r\n            btHalfExtents.setValue(params.height / 2, params.radius, params.radius)\r\n            collisionShape = new Ammo.btCylinderShapeX(btHalfExtents)\r\n            break\r\n          case 'z':\r\n            btHalfExtents.setValue(params.radius, params.radius, params.height / 2)\r\n            collisionShape = new Ammo.btCylinderShapeZ(btHalfExtents)\r\n            break\r\n        }\r\n        break\r\n      case 'cone':\r\n        switch (axis) {\r\n          case 'y':\r\n            collisionShape = new Ammo.btConeShape(params.radius, params.height)\r\n            break\r\n          case 'x':\r\n            collisionShape = new Ammo.btConeShapeX(params.radius, params.height)\r\n            break\r\n          case 'z':\r\n            collisionShape = new Ammo.btConeShapeZ(params.radius, params.height)\r\n            break\r\n        }\r\n        break\r\n      case 'capsule':\r\n        switch (axis) {\r\n          case 'y':\r\n            collisionShape = new Ammo.btCapsuleShape(params.radius, params.height)\r\n            break\r\n          case 'x':\r\n            collisionShape = new Ammo.btCapsuleShapeX(params.radius, params.height)\r\n            break\r\n          case 'z':\r\n            collisionShape = new Ammo.btCapsuleShapeZ(params.radius, params.height)\r\n            break\r\n        }\r\n        break\r\n      case 'torus':\r\n        collisionShape = createTorusShape(params, quat)\r\n        break\r\n      case 'plane':\r\n        // uses a triMeshShape for the plane\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: false\r\n        })\r\n        break\r\n      case 'hull':\r\n        collisionShape = createHullShape(d.vertices, d.matrices, d.matrixWorld, params)\r\n        break\r\n      case 'hacd':\r\n        collisionShape = createHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\r\n        break\r\n      case 'vhacd':\r\n        collisionShape = createVHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\r\n        break\r\n      case 'convexMesh':\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: false\r\n        })\r\n        break\r\n      case 'concaveMesh':\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: true\r\n        })\r\n        break\r\n    }\r\n\r\n    Ammo.destroy(btHalfExtents)\r\n\r\n    // if there is a x, y or z, take is as temporary offset parameter\r\n    const { x, y, z } = params\r\n    if (x || y || z) {\r\n      // @ts-ignore\r\n      collisionShape.offset = { x: x || 0, y: y || 0, z: z || 0 }\r\n    }\r\n\r\n    // in some cases, like hacd, it will be an array of shapes\r\n    // so we merge them\r\n    if (Array.isArray(collisionShape)) collisionShape = this.mergeCollisionShapesToCompoundShape(collisionShape)\r\n\r\n    return collisionShape as Ammo.btCollisionShape\r\n  }\r\n\r\n  public mergeCollisionShapesToCompoundShape(collisionShapes: Ammo.btCollisionShape[]): Ammo.btCompoundShape {\r\n    const compoundShape = new Ammo.btCompoundShape()\r\n    collisionShapes.forEach(shape => {\r\n      // @ts-ignore\r\n      const { offset } = shape // offset is a custom parameter\r\n\r\n      const transform = new Ammo.btTransform()\r\n      transform.setIdentity()\r\n      if (offset) transform.getOrigin().setValue(offset.x || 0, offset.y || 0, offset.z || 0)\r\n      compoundShape.addChildShape(transform, shape)\r\n    })\r\n    return compoundShape\r\n  }\r\n\r\n  protected addExisting(object: ExtendedObject3D, config: Types.AddExistingConfig = {}): any {\r\n    const { hasBody } = object\r\n    if (hasBody) {\r\n      console.warn(`[Enable3d]: Object \"${object.name}\" already has a physical body!`)\r\n      return\r\n    }\r\n\r\n    const pos = new Vector3()\r\n    const quat = new Quaternion()\r\n    const scale = new Vector3()\r\n    object.getWorldPosition(pos)\r\n    object.getWorldQuaternion(quat)\r\n    object.getWorldScale(scale)\r\n\r\n    const isStaticObject = (config.collisionFlags || 0).toString(2).slice(-1) === '1'\r\n    const isKinematicObject = (config.collisionFlags || 0).toString(2).slice(-2, -1) === '1'\r\n\r\n    const {\r\n      shape = 'unknown',\r\n      compound = [],\r\n      mass = isStaticObject || isKinematicObject ? 0 : 1, // set default mass of 0 for static objects, and 1 for all other objects\r\n      collisionFlags = 0,\r\n      collisionGroup = 1,\r\n      collisionMask = -1,\r\n      offset = undefined,\r\n      breakable = false,\r\n      addChildren = true,\r\n      margin = 0.01,\r\n      ignoreScale = false\r\n    } = config\r\n\r\n    if (ignoreScale) scale.set(1, 1, 1)\r\n\r\n    if (compound.length >= 1) {\r\n      // if we want a custom compound shape, we simply do\r\n      const collisionShapes = compound.map((s: any) => this.createCollisionShape(s.shape, s))\r\n      const compoundShape = this.mergeCollisionShapesToCompoundShape(collisionShapes)\r\n      const localTransform = this.finishCollisionShape(compoundShape, pos, quat, scale, margin)\r\n      const rigidBody = this.collisionShapeToRigidBody(compoundShape, localTransform, mass, isKinematicObject)\r\n      this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, breakable, offset)\r\n      object.body.ignoreScale = ignoreScale\r\n      return\r\n    }\r\n\r\n    const collisionShapes: Ammo.btCollisionShape[] = []\r\n\r\n    // if object is a THREE.Group, object does not have a mesh\r\n    if (shape !== 'unknown' || object.isMesh) {\r\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\r\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n      collisionShapes.push(cs)\r\n    }\r\n\r\n    // check if the object has children\r\n    if (shape === 'unknown' && addChildren && object.children.length >= 1) {\r\n      object.children.forEach((child: any) => {\r\n        if (child.isMesh) {\r\n          const p = this.prepareThreeObjectForCollisionShape(child)\r\n          const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n          // @ts-ignore\r\n          cs.offset = child.position.clone() // this is relative position to its parent\r\n          collisionShapes.push(cs)\r\n        }\r\n      })\r\n    }\r\n\r\n    // FALLBACK: if we do not have any collisionShapes yet, add a simple box as a fallback\r\n    if (collisionShapes.length === 0) {\r\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\r\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n      collisionShapes.push(cs)\r\n    }\r\n\r\n    const collisionShape =\r\n      collisionShapes.length === 1 ? collisionShapes[0] : this.mergeCollisionShapesToCompoundShape(collisionShapes)\r\n\r\n    // add rigid body\r\n    // object.position.copy(pos)\r\n    // object.quaternion.copy(quat)\r\n\r\n    const localTransform = this.finishCollisionShape(collisionShape, pos, quat, scale, margin)\r\n    const rigidBody = this.collisionShapeToRigidBody(collisionShape, localTransform, mass, isKinematicObject)\r\n\r\n    this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, breakable, offset)\r\n    object.body.ignoreScale = ignoreScale\r\n  }\r\n\r\n  public addRigidBodyToWorld(\r\n    object: ExtendedObject3D,\r\n    rigidBody: Ammo.btRigidBody,\r\n    collisionFlags: number,\r\n    collisionGroup: number,\r\n    collisionMask: number,\r\n    breakable: boolean,\r\n    offset?: { x?: number; y?: number; z?: number }\r\n  ) {\r\n    this.rigidBodies.push(object)\r\n    this.physicsWorld.addRigidBody(rigidBody, collisionGroup, collisionMask)\r\n\r\n    const ptr = Object.values(rigidBody)[0]\r\n    // @ts-ignore\r\n    rigidBody.name = object.name\r\n    object.body = new PhysicsBody(this, rigidBody)\r\n    object.hasBody = true\r\n    // @ts-ignore\r\n    object.ptr = ptr\r\n    // @ts-ignore\r\n    rigidBody.threeObject = object\r\n\r\n    if (breakable) object.body.breakable = true\r\n    if (offset) object.body.offset = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    object.body.setCollisionFlags(collisionFlags)\r\n  }\r\n\r\n  public finishCollisionShape(\r\n    collisionShape: Ammo.btCollisionShape,\r\n    pos: Vector3,\r\n    quat: Quaternion,\r\n    scale: Vector3,\r\n    margin: number\r\n  ) {\r\n    collisionShape.setMargin(margin)\r\n\r\n    const rotation = new Ammo.btQuaternion(0, 0, 0, 1)\r\n    rotation.setValue(quat.x, quat.y, quat.z, quat.w)\r\n\r\n    const localTransform = new Ammo.btTransform()\r\n    localTransform.setIdentity()\r\n    localTransform.getOrigin().setValue(pos.x, pos.y, pos.z)\r\n    localTransform.setRotation(rotation)\r\n\r\n    Ammo.destroy(rotation)\r\n\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    collisionShape.setLocalScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n\r\n    return localTransform\r\n  }\r\n\r\n  public collisionShapeToRigidBody(\r\n    collisionShape: Ammo.btCollisionShape,\r\n    localTransform: Ammo.btTransform,\r\n    mass: number,\r\n    disableDeactivation: boolean\r\n  ) {\r\n    const motionState = new Ammo.btDefaultMotionState(localTransform)\r\n    const localInertia = new Ammo.btVector3(0, 0, 0)\r\n    if (mass > 0) collisionShape.calculateLocalInertia(mass, localInertia)\r\n    const rbInfo = new Ammo.btRigidBodyConstructionInfo(mass, motionState, collisionShape, localInertia)\r\n    const rigidBody = new Ammo.btRigidBody(rbInfo)\r\n    if (mass > 0 || disableDeactivation) rigidBody.setActivationState(4) // Disable deactivation\r\n    return rigidBody\r\n  }\r\n}\r\n\r\nexport { AmmoPhysics }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { Quaternion } from '@enable3d/three-wrapper/dist/index'\r\n\r\n// https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=7228\r\nexport const createTorusShape = (\r\n  config: { radius: number; tube: number; tubularSegments: number },\r\n  quat: Quaternion\r\n) => {\r\n  const { radius = 1, tube = 0.4, tubularSegments = 8 } = config\r\n\r\n  const SIMD_PI = Math.PI\r\n  const subdivisions = tubularSegments\r\n  const gap = Math.sqrt(2.0 * tube * tube - 2.0 * tube * tube * Math.cos((2.0 * SIMD_PI) / subdivisions))\r\n\r\n  const btHalfExtents = new Ammo.btVector3(tube, SIMD_PI / subdivisions + 0.5 * gap, tube)\r\n  const cylinderShape = new Ammo.btCylinderShape(btHalfExtents)\r\n  cylinderShape.setMargin(0.05)\r\n\r\n  const compoundShape = new Ammo.btCompoundShape()\r\n\r\n  const forward = new Ammo.btVector3(0, 0, 1)\r\n  const side = new Ammo.btVector3(0, radius, 0)\r\n  const rotation = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w)\r\n\r\n  for (let x = 0; x < subdivisions; x++) {\r\n    const angle = (x * 2.0 * SIMD_PI) / subdivisions\r\n    const position = side.rotate(forward, angle)\r\n    const transform = new Ammo.btTransform()\r\n    rotation.setRotation(forward, angle + Math.PI / 2)\r\n    transform.setIdentity()\r\n    transform.setOrigin(position)\r\n    transform.setRotation(rotation)\r\n    compoundShape.addChildShape(transform, cylinderShape)\r\n  }\r\n\r\n  return compoundShape\r\n}\r\n"],"sourceRoot":""}